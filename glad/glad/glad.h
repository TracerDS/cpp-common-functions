/*

    OpenGL loader generated by glad 0.1.36 on Tue Feb 18 09:51:04 2025.

    Language/Generator: C/C++
    Specification: gl
    APIs: gl=3.3
    Profile: core
    Extensions:

    Loader: True
    Local files: False
    Omit khrplatform: False
    Reproducible: False

    Commandline:
        --profile="core" --api="gl=3.3" --generator="c" --spec="gl" --extensions=""
    Online:
        https://glad.dav1d.de/#profile=core&language=c&specification=gl&loader=on&api=gl%3D3.3
*/


#ifndef __glad_h_
#define __glad_h_

#ifdef __gl_h_
#error OpenGL header already included, remove this include, glad already provides it
#endif
#define __gl_h_

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)
#define APIENTRY __stdcall
#endif

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY APIENTRY
#endif

#ifdef __cplusplus
extern "C" {
#endif

    struct gladGLversionStruct {
        int major;
        int minor;
    };

    typedef void* (*GLADloadproc)(const char* name);

#ifndef GLAPI
# if defined(GLAD_GLAPI_EXPORT)
#  if defined(_WIN32) || defined(__CYGWIN__)
#   if defined(GLAD_GLAPI_EXPORT_BUILD)
#    if defined(__GNUC__)
#     define GLAPI __attribute__ ((dllexport)) extern
#    else
#     define GLAPI __declspec(dllexport) extern
#    endif
#   else
#    if defined(__GNUC__)
#     define GLAPI __attribute__ ((dllimport)) extern
#    else
#     define GLAPI __declspec(dllimport) extern
#    endif
#   endif
#  elif defined(__GNUC__) && defined(GLAD_GLAPI_EXPORT_BUILD)
#   define GLAPI __attribute__ ((visibility ("default"))) extern
#  else
#   define GLAPI extern
#  endif
# else
#  define GLAPI extern
# endif
#endif

    GLAPI struct gladGLversionStruct GLVersion;

    GLAPI int gladLoadGL(void);

    GLAPI int gladLoadGLLoader(GLADloadproc);

#include <KHR/khrplatform.h>
    typedef unsigned int GLenum;
    typedef unsigned char GLboolean;
    typedef unsigned int GLbitfield;
    typedef void GLvoid;
    typedef khronos_int8_t GLbyte;
    typedef khronos_uint8_t GLubyte;
    typedef khronos_int16_t GLshort;
    typedef khronos_uint16_t GLushort;
    typedef int GLint;
    typedef unsigned int GLuint;
    typedef khronos_int32_t GLclampx;
    typedef int GLsizei;
    typedef khronos_float_t GLfloat;
    typedef khronos_float_t GLclampf;
    typedef double GLdouble;
    typedef double GLclampd;
    typedef void* GLeglClientBufferEXT;
    typedef void* GLeglImageOES;
    typedef char GLchar;
    typedef char GLcharARB;
#ifdef __APPLE__
    typedef void* GLhandleARB;
#else
    typedef unsigned int GLhandleARB;
#endif
    typedef khronos_uint16_t GLhalf;
    typedef khronos_uint16_t GLhalfARB;
    typedef khronos_int32_t GLfixed;
    typedef khronos_intptr_t GLintptr;
    typedef khronos_intptr_t GLintptrARB;
    typedef khronos_ssize_t GLsizeiptr;
    typedef khronos_ssize_t GLsizeiptrARB;
    typedef khronos_int64_t GLint64;
    typedef khronos_int64_t GLint64EXT;
    typedef khronos_uint64_t GLuint64;
    typedef khronos_uint64_t GLuint64EXT;
    typedef struct __GLsync* GLsync;
    struct _cl_context;
    struct _cl_event;
    typedef void (APIENTRY* GLDEBUGPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* message, const void* userParam);
    typedef void (APIENTRY* GLDEBUGPROCARB)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* message, const void* userParam);
    typedef void (APIENTRY* GLDEBUGPROCKHR)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar* message, const void* userParam);
    typedef void (APIENTRY* GLDEBUGPROCAMD)(GLuint id, GLenum category, GLenum severity, GLsizei length, const GLchar* message, void* userParam);
    typedef unsigned short GLhalfNV;
    typedef GLintptr GLvdpauSurfaceNV;
    typedef void (APIENTRY* GLVULKANPROCNV)(void);
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_REPEAT 0x2901
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DOUBLE 0x140A
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_EQUATION 0x8009
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_MIN 0x8007
#define GL_MAX 0x8008
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F 0x8814
#define GL_RGB32F 0x8815
#define GL_RGBA16F 0x881A
#define GL_RGB16F 0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_RGB9_E5 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_RGBA32UI 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGBA16UI 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGBA8UI 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGBA32I 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGBA16I 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGBA8I 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RED_INTEGER 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_RGB_INTEGER 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_HALF_FLOAT 0x140B
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_RG 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R16 0x822A
#define GL_RG8 0x822B
#define GL_RG16 0x822C
#define GL_R16F 0x822D
#define GL_R32F 0x822E
#define GL_RG16F 0x822F
#define GL_RG32F 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_DEPTH_CLAMP 0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_SIGNALED 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_SRC1_COLOR 0x88F9
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_SAMPLER_BINDING 0x8919
#define GL_RGB10_A2UI 0x906F
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIMESTAMP 0x8E28
#define GL_INT_2_10_10_10_REV 0x8D9F

#ifndef GL_VERSION_1_0
#define GL_VERSION_1_0 1
    GLAPI int GLAD_GL_VERSION_1_0;

    typedef void (APIENTRYP PFNGLCULLFACEPROC)(GLenum mode);
    typedef void (APIENTRYP PFNGLFRONTFACEPROC)(GLenum mode);
    typedef void (APIENTRYP PFNGLHINTPROC)(GLenum target, GLenum mode);
    typedef void (APIENTRYP PFNGLLINEWIDTHPROC)(GLfloat width);
    typedef void (APIENTRYP PFNGLPOINTSIZEPROC)(GLfloat size);
    typedef void (APIENTRYP PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
    typedef void (APIENTRYP PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
    typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat* params);
    typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
    typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint* params);
    typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
    typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
    typedef void (APIENTRYP PFNGLDRAWBUFFERPROC)(GLenum buf);
    typedef void (APIENTRYP PFNGLCLEARPROC)(GLbitfield mask);
    typedef void (APIENTRYP PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    typedef void (APIENTRYP PFNGLCLEARSTENCILPROC)(GLint s);
    typedef void (APIENTRYP PFNGLCLEARDEPTHPROC)(GLdouble depth);
    typedef void (APIENTRYP PFNGLSTENCILMASKPROC)(GLuint mask);
    typedef void (APIENTRYP PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
    typedef void (APIENTRYP PFNGLDEPTHMASKPROC)(GLboolean flag);
    typedef void (APIENTRYP PFNGLDISABLEPROC)(GLenum cap);
    typedef void (APIENTRYP PFNGLENABLEPROC)(GLenum cap);
    typedef void (APIENTRYP PFNGLFINISHPROC)(void);
    typedef void (APIENTRYP PFNGLFLUSHPROC)(void);
    typedef void (APIENTRYP PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
    typedef void (APIENTRYP PFNGLLOGICOPPROC)(GLenum opcode);
    typedef void (APIENTRYP PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
    typedef void (APIENTRYP PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
    typedef void (APIENTRYP PFNGLDEPTHFUNCPROC)(GLenum func);
    typedef void (APIENTRYP PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
    typedef void (APIENTRYP PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
    typedef void (APIENTRYP PFNGLREADBUFFERPROC)(GLenum src);
    typedef void (APIENTRYP PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels);
    typedef void (APIENTRYP PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean* data);
    typedef void (APIENTRYP PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble* data);
    typedef GLenum(APIENTRYP PFNGLGETERRORPROC)(void);
    typedef void (APIENTRYP PFNGLGETFLOATVPROC)(GLenum pname, GLfloat* data);
    typedef void (APIENTRYP PFNGLGETINTEGERVPROC)(GLenum pname, GLint* data);
    typedef const GLubyte* (APIENTRYP PFNGLGETSTRINGPROC)(GLenum name);
    typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
    typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat* params);
    typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat* params);
    typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint* params);
    typedef GLboolean(APIENTRYP PFNGLISENABLEDPROC)(GLenum cap);
    typedef void (APIENTRYP PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
    typedef void (APIENTRYP PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

    GLAPI PFNGLCULLFACEPROC glad_glCullFace;
    GLAPI PFNGLFRONTFACEPROC glad_glFrontFace;
    GLAPI PFNGLHINTPROC glad_glHint;
    GLAPI PFNGLLINEWIDTHPROC glad_glLineWidth;
    GLAPI PFNGLPOINTSIZEPROC glad_glPointSize;
    GLAPI PFNGLPOLYGONMODEPROC glad_glPolygonMode;
    GLAPI PFNGLSCISSORPROC glad_glScissor;
    GLAPI PFNGLTEXPARAMETERFPROC glad_glTexParameterf;
    GLAPI PFNGLTEXPARAMETERFVPROC glad_glTexParameterfv;
    GLAPI PFNGLTEXPARAMETERIPROC glad_glTexParameteri;
    GLAPI PFNGLTEXPARAMETERIVPROC glad_glTexParameteriv;
    GLAPI PFNGLTEXIMAGE1DPROC glad_glTexImage1D;
    GLAPI PFNGLTEXIMAGE2DPROC glad_glTexImage2D;
    GLAPI PFNGLDRAWBUFFERPROC glad_glDrawBuffer;
    GLAPI PFNGLCLEARPROC glad_glClear;
    GLAPI PFNGLCLEARCOLORPROC glad_glClearColor;
    GLAPI PFNGLCLEARSTENCILPROC glad_glClearStencil;
    GLAPI PFNGLCLEARDEPTHPROC glad_glClearDepth;
    GLAPI PFNGLSTENCILMASKPROC glad_glStencilMask;
    GLAPI PFNGLCOLORMASKPROC glad_glColorMask;
    GLAPI PFNGLDEPTHMASKPROC glad_glDepthMask;
    GLAPI PFNGLDISABLEPROC glad_glDisable;
    GLAPI PFNGLENABLEPROC glad_glEnable;
    GLAPI PFNGLFINISHPROC glad_glFinish;
    GLAPI PFNGLFLUSHPROC glad_glFlush;
    GLAPI PFNGLBLENDFUNCPROC glad_glBlendFunc;
    GLAPI PFNGLLOGICOPPROC glad_glLogicOp;
    GLAPI PFNGLSTENCILFUNCPROC glad_glStencilFunc;
    GLAPI PFNGLSTENCILOPPROC glad_glStencilOp;
    GLAPI PFNGLDEPTHFUNCPROC glad_glDepthFunc;
    GLAPI PFNGLPIXELSTOREFPROC glad_glPixelStoref;
    GLAPI PFNGLPIXELSTOREIPROC glad_glPixelStorei;
    GLAPI PFNGLREADBUFFERPROC glad_glReadBuffer;
    GLAPI PFNGLREADPIXELSPROC glad_glReadPixels;
    GLAPI PFNGLGETBOOLEANVPROC glad_glGetBooleanv;
    GLAPI PFNGLGETDOUBLEVPROC glad_glGetDoublev;
    GLAPI PFNGLGETERRORPROC glad_glGetError;
    GLAPI PFNGLGETFLOATVPROC glad_glGetFloatv;
    GLAPI PFNGLGETINTEGERVPROC glad_glGetIntegerv;
    GLAPI PFNGLGETSTRINGPROC glad_glGetString;
    GLAPI PFNGLGETTEXIMAGEPROC glad_glGetTexImage;
    GLAPI PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv;
    GLAPI PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv;
    GLAPI PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv;
    GLAPI PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv;
    GLAPI PFNGLISENABLEDPROC glad_glIsEnabled;
    GLAPI PFNGLDEPTHRANGEPROC glad_glDepthRange;
    GLAPI PFNGLVIEWPORTPROC glad_glViewport;

#ifdef __GL_FUNCTION_MACROS__
#define glCullFace glad_glCullFace
#define glFrontFace glad_glFrontFace
#define glHint glad_glHint
#define glLineWidth glad_glLineWidth
#define glPointSize glad_glPointSize
#define glPolygonMode glad_glPolygonMode
#define glScissor glad_glScissor
#define glTexParameterf glad_glTexParameterf
#define glTexParameterfv glad_glTexParameterfv
#define glTexParameteri glad_glTexParameteri
#define glTexParameteriv glad_glTexParameteriv
#define glTexImage1D glad_glTexImage1D
#define glTexImage2D glad_glTexImage2D
#define glDrawBuffer glad_glDrawBuffer
#define glClear glad_glClear
#define glClearColor glad_glClearColor
#define glClearStencil glad_glClearStencil
#define glClearDepth glad_glClearDepth
#define glStencilMask glad_glStencilMask
#define glColorMask glad_glColorMask
#define glDepthMask glad_glDepthMask
#define glDisable glad_glDisable
#define glEnable glad_glEnable
#define glFinish glad_glFinish
#define glFlush glad_glFlush
#define glBlendFunc glad_glBlendFunc
#define glLogicOp glad_glLogicOp
#define glStencilFunc glad_glStencilFunc
#define glStencilOp glad_glStencilOp
#define glDepthFunc glad_glDepthFunc
#define glPixelStoref glad_glPixelStoref
#define glPixelStorei glad_glPixelStorei
#define glReadBuffer glad_glReadBuffer
#define glReadPixels glad_glReadPixels
#define glGetBooleanv glad_glGetBooleanv
#define glGetDoublev glad_glGetDoublev
#define glGetError glad_glGetError
#define glGetFloatv glad_glGetFloatv
#define glGetIntegerv glad_glGetIntegerv
#define glGetString glad_glGetString
#define glGetTexImage glad_glGetTexImage
#define glGetTexParameterfv glad_glGetTexParameterfv
#define glGetTexParameteriv glad_glGetTexParameteriv
#define glGetTexLevelParameterfv glad_glGetTexLevelParameterfv
#define glGetTexLevelParameteriv glad_glGetTexLevelParameteriv
#define glIsEnabled glad_glIsEnabled
#define glDepthRange glad_glDepthRange
#define glViewport glad_glViewport
#else
    GLAPI void glCullFace(GLenum mode);
    GLAPI void glFrontFace(GLenum mode);
    GLAPI void glHint(GLenum target, GLenum mode);
    GLAPI void glLineWidth(GLfloat width);
    GLAPI void glPointSize(GLfloat size);
    GLAPI void glPolygonMode(GLenum face, GLenum mode);
    GLAPI void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
    GLAPI void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
    GLAPI void glTexParameterfv(GLenum target, GLenum pname, const GLfloat* params);
    GLAPI void glTexParameteri(GLenum target, GLenum pname, GLint param);
    GLAPI void glTexParameteriv(GLenum target, GLenum pname, const GLint* params);
    GLAPI void glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
    GLAPI void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
    GLAPI void glDrawBuffer(GLenum buf);
    GLAPI void glClear(GLbitfield mask);
    GLAPI void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    GLAPI void glClearStencil(GLint s);
    GLAPI void glClearDepth(GLdouble depth);
    GLAPI void glStencilMask(GLuint mask);
    GLAPI void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
    GLAPI void glDepthMask(GLboolean flag);
    GLAPI void glDisable(GLenum cap);
    GLAPI void glEnable(GLenum cap);
    GLAPI void glFinish();
    GLAPI void glFlush();
    GLAPI void glBlendFunc(GLenum sfactor, GLenum dfactor);
    GLAPI void glLogicOp(GLenum opcode);
    GLAPI void glStencilFunc(GLenum func, GLint ref, GLuint mask);
    GLAPI void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
    GLAPI void glDepthFunc(GLenum func);
    GLAPI void glPixelStoref(GLenum pname, GLfloat param);
    GLAPI void glPixelStorei(GLenum pname, GLint param);
    GLAPI void glReadBuffer(GLenum src);
    GLAPI void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels);
    GLAPI void glGetBooleanv(GLenum pname, GLboolean* data);
    GLAPI void glGetDoublev(GLenum pname, GLdouble* data);
    GLAPI GLenum glGetError();
    GLAPI void glGetFloatv(GLenum pname, GLfloat* data);
    GLAPI void glGetIntegerv(GLenum pname, GLint* data);
    GLAPI const GLubyte* glGetString(GLenum name);
    GLAPI void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
    GLAPI void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat* params);
    GLAPI void glGetTexParameteriv(GLenum target, GLenum pname, GLint* params);
    GLAPI void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat* params);
    GLAPI void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint* params);
    GLAPI GLboolean glIsEnabled(GLenum cap);
    GLAPI void glDepthRange(GLdouble n, GLdouble f);
    GLAPI void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
#endif

#endif
#ifndef GL_VERSION_1_1
#define GL_VERSION_1_1 1
    GLAPI int GLAD_GL_VERSION_1_1;

    typedef void (APIENTRYP PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
    typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices);
    typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
    typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
    typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
    typedef void (APIENTRYP PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
    typedef void (APIENTRYP PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint* textures);
    typedef void (APIENTRYP PFNGLGENTEXTURESPROC)(GLsizei n, GLuint* textures);
    typedef GLboolean(APIENTRYP PFNGLISTEXTUREPROC)(GLuint texture);

    GLAPI PFNGLDRAWARRAYSPROC glad_glDrawArrays;
    GLAPI PFNGLDRAWELEMENTSPROC glad_glDrawElements;
    GLAPI PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset;
    GLAPI PFNGLCOPYTEXIMAGE1DPROC glad_glCopyTexImage1D;
    GLAPI PFNGLCOPYTEXIMAGE2DPROC glad_glCopyTexImage2D;
    GLAPI PFNGLCOPYTEXSUBIMAGE1DPROC glad_glCopyTexSubImage1D;
    GLAPI PFNGLCOPYTEXSUBIMAGE2DPROC glad_glCopyTexSubImage2D;
    GLAPI PFNGLTEXSUBIMAGE1DPROC glad_glTexSubImage1D;
    GLAPI PFNGLTEXSUBIMAGE2DPROC glad_glTexSubImage2D;
    GLAPI PFNGLBINDTEXTUREPROC glad_glBindTexture;
    GLAPI PFNGLDELETETEXTURESPROC glad_glDeleteTextures;
    GLAPI PFNGLGENTEXTURESPROC glad_glGenTextures;
    GLAPI PFNGLISTEXTUREPROC glad_glIsTexture;

#ifdef __GL_FUNCTION_MACROS__
#define glDrawArrays glad_glDrawArrays
#define glDrawElements glad_glDrawElements
#define glPolygonOffset glad_glPolygonOffset
#define glCopyTexImage1D glad_glCopyTexImage1D
#define glCopyTexImage2D glad_glCopyTexImage2D
#define glCopyTexSubImage1D glad_glCopyTexSubImage1D
#define glCopyTexSubImage2D glad_glCopyTexSubImage2D
#define glTexSubImage1D glad_glTexSubImage1D
#define glTexSubImage2D glad_glTexSubImage2D
#define glBindTexture glad_glBindTexture
#define glDeleteTextures glad_glDeleteTextures
#define glGenTextures glad_glGenTextures
#define glIsTexture glad_glIsTexture
#else
    GLAPI void glDrawArrays(GLenum mode, GLint first, GLsizei count);
    GLAPI void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void* indices);
    GLAPI void glPolygonOffset(GLfloat factor, GLfloat units);
    GLAPI void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
    GLAPI void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
    GLAPI void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    GLAPI void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    GLAPI void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void* pixels);
    GLAPI void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
    GLAPI void glBindTexture(GLenum target, GLuint texture);
    GLAPI void glDeleteTextures(GLsizei n, const GLuint* textures);
    GLAPI void glGenTextures(GLsizei n, GLuint* textures);
    GLAPI GLboolean glIsTexture(GLuint texture);
#endif

#endif
#ifndef GL_VERSION_1_2
#define GL_VERSION_1_2 1
    GLAPI int GLAD_GL_VERSION_1_2;

    typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices);
    typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels);
    typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
    typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

    GLAPI PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements;
    GLAPI PFNGLTEXIMAGE3DPROC glad_glTexImage3D;
    GLAPI PFNGLTEXSUBIMAGE3DPROC glad_glTexSubImage3D;
    GLAPI PFNGLCOPYTEXSUBIMAGE3DPROC glad_glCopyTexSubImage3D;

#ifdef __GL_FUNCTION_MACROS__
#define glDrawRangeElements glad_glDrawRangeElements
#define glTexImage3D glad_glTexImage3D
#define glTexSubImage3D glad_glTexSubImage3D
#define glCopyTexSubImage3D glad_glCopyTexSubImage3D
#else
    GLAPI void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices);
    GLAPI void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void* pixels);
    GLAPI void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void* pixels);
    GLAPI void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
#endif

#endif
#ifndef GL_VERSION_1_3
#define GL_VERSION_1_3 1
    GLAPI int GLAD_GL_VERSION_1_3;

    typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC)(GLenum texture);
    typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
    typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void* img);

    GLAPI PFNGLACTIVETEXTUREPROC glad_glActiveTexture;
    GLAPI PFNGLSAMPLECOVERAGEPROC glad_glSampleCoverage;
    GLAPI PFNGLCOMPRESSEDTEXIMAGE3DPROC glad_glCompressedTexImage3D;
    GLAPI PFNGLCOMPRESSEDTEXIMAGE2DPROC glad_glCompressedTexImage2D;
    GLAPI PFNGLCOMPRESSEDTEXIMAGE1DPROC glad_glCompressedTexImage1D;
    GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glad_glCompressedTexSubImage3D;
    GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glad_glCompressedTexSubImage2D;
    GLAPI PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glad_glCompressedTexSubImage1D;
    GLAPI PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage;

#ifdef __GL_FUNCTION_MACROS__
#define glActiveTexture glad_glActiveTexture
#define glSampleCoverage glad_glSampleCoverage
#define glCompressedTexImage3D glad_glCompressedTexImage3D
#define glCompressedTexImage2D glad_glCompressedTexImage2D
#define glCompressedTexImage1D glad_glCompressedTexImage1D
#define glCompressedTexSubImage3D glad_glCompressedTexSubImage3D
#define glCompressedTexSubImage2D glad_glCompressedTexSubImage2D
#define glCompressedTexSubImage1D glad_glCompressedTexSubImage1D
#define glGetCompressedTexImage glad_glGetCompressedTexImage
#else
    GLAPI void glActiveTexture(GLenum texture);
    GLAPI void glSampleCoverage(GLfloat value, GLboolean invert);
    GLAPI void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
    GLAPI void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
    GLAPI void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
    GLAPI void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
    GLAPI void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
    GLAPI void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
    GLAPI void glGetCompressedTexImage(GLenum target, GLint level, void* img);
#endif

#endif
#ifndef GL_VERSION_1_4
#define GL_VERSION_1_4 1
    GLAPI int GLAD_GL_VERSION_1_4;

    typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount);
    typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei* count, GLenum type, const void* const* indices, GLsizei drawcount);
    typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
    typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat* params);
    typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
    typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint* params);
    typedef void (APIENTRYP PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC)(GLenum mode);

    GLAPI PFNGLBLENDFUNCSEPARATEPROC glad_glBlendFuncSeparate;
    GLAPI PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays;
    GLAPI PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements;
    GLAPI PFNGLPOINTPARAMETERFPROC glad_glPointParameterf;
    GLAPI PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv;
    GLAPI PFNGLPOINTPARAMETERIPROC glad_glPointParameteri;
    GLAPI PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv;
    GLAPI PFNGLBLENDCOLORPROC glad_glBlendColor;
    GLAPI PFNGLBLENDEQUATIONPROC glad_glBlendEquation;

#ifdef __GL_FUNCTION_MACROS__
#define glBlendFuncSeparate glad_glBlendFuncSeparate
#define glMultiDrawArrays glad_glMultiDrawArrays
#define glMultiDrawElements glad_glMultiDrawElements
#define glPointParameterf glad_glPointParameterf
#define glPointParameterfv glad_glPointParameterfv
#define glPointParameteri glad_glPointParameteri
#define glPointParameteriv glad_glPointParameteriv
#define glBlendColor glad_glBlendColor
#define glBlendEquation glad_glBlendEquation
#else
    GLAPI void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
    GLAPI void glMultiDrawArrays(GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount);
    GLAPI void glMultiDrawElements(GLenum mode, const GLsizei* count, GLenum type, const void* const* indices, GLsizei drawcount);
    GLAPI void glPointParameterf(GLenum pname, GLfloat param);
    GLAPI void glPointParameterfv(GLenum pname, const GLfloat* params);
    GLAPI void glPointParameteri(GLenum pname, GLint param);
    GLAPI void glPointParameteriv(GLenum pname, const GLint* params);
    GLAPI void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
    GLAPI void glBlendEquation(GLenum mode);
#endif

#endif
#ifndef GL_VERSION_1_5
#define GL_VERSION_1_5 1
    GLAPI int GLAD_GL_VERSION_1_5;

    typedef void (APIENTRYP PFNGLGENQUERIESPROC)(GLsizei n, GLuint* ids);
    typedef void (APIENTRYP PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint* ids);
    typedef GLboolean(APIENTRYP PFNGLISQUERYPROC)(GLuint id);
    typedef void (APIENTRYP PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
    typedef void (APIENTRYP PFNGLENDQUERYPROC)(GLenum target);
    typedef void (APIENTRYP PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint* params);
    typedef void (APIENTRYP PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
    typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint* buffers);
    typedef void (APIENTRYP PFNGLGENBUFFERSPROC)(GLsizei n, GLuint* buffers);
    typedef GLboolean(APIENTRYP PFNGLISBUFFERPROC)(GLuint buffer);
    typedef void (APIENTRYP PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void* data, GLenum usage);
    typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void* data);
    typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void* data);
    typedef void* (APIENTRYP PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
    typedef GLboolean(APIENTRYP PFNGLUNMAPBUFFERPROC)(GLenum target);
    typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void** params);

    GLAPI PFNGLGENQUERIESPROC glad_glGenQueries;
    GLAPI PFNGLDELETEQUERIESPROC glad_glDeleteQueries;
    GLAPI PFNGLISQUERYPROC glad_glIsQuery;
    GLAPI PFNGLBEGINQUERYPROC glad_glBeginQuery;
    GLAPI PFNGLENDQUERYPROC glad_glEndQuery;
    GLAPI PFNGLGETQUERYIVPROC glad_glGetQueryiv;
    GLAPI PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv;
    GLAPI PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv;
    GLAPI PFNGLBINDBUFFERPROC glad_glBindBuffer;
    GLAPI PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers;
    GLAPI PFNGLGENBUFFERSPROC glad_glGenBuffers;
    GLAPI PFNGLISBUFFERPROC glad_glIsBuffer;
    GLAPI PFNGLBUFFERDATAPROC glad_glBufferData;
    GLAPI PFNGLBUFFERSUBDATAPROC glad_glBufferSubData;
    GLAPI PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData;
    GLAPI PFNGLMAPBUFFERPROC glad_glMapBuffer;
    GLAPI PFNGLUNMAPBUFFERPROC glad_glUnmapBuffer;
    GLAPI PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv;
    GLAPI PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv;

#ifdef __GL_FUNCTION_MACROS__
#define glGenQueries glad_glGenQueries
#define glDeleteQueries glad_glDeleteQueries
#define glIsQuery glad_glIsQuery
#define glBeginQuery glad_glBeginQuery
#define glEndQuery glad_glEndQuery
#define glGetQueryiv glad_glGetQueryiv
#define glGetQueryObjectiv glad_glGetQueryObjectiv
#define glGetQueryObjectuiv glad_glGetQueryObjectuiv
#define glBindBuffer glad_glBindBuffer
#define glDeleteBuffers glad_glDeleteBuffers
#define glGenBuffers glad_glGenBuffers
#define glIsBuffer glad_glIsBuffer
#define glBufferData glad_glBufferData
#define glBufferSubData glad_glBufferSubData
#define glGetBufferSubData glad_glGetBufferSubData
#define glMapBuffer glad_glMapBuffer
#define glUnmapBuffer glad_glUnmapBuffer
#define glGetBufferParameteriv glad_glGetBufferParameteriv
#define glGetBufferPointerv glad_glGetBufferPointerv
#else
    GLAPI void glGenQueries(GLsizei n, GLuint* ids);
    GLAPI void glDeleteQueries(GLsizei n, const GLuint* ids);
    GLAPI GLboolean glIsQuery(GLuint id);
    GLAPI void glBeginQuery(GLenum target, GLuint id);
    GLAPI void glEndQuery(GLenum target);
    GLAPI void glGetQueryiv(GLenum target, GLenum pname, GLint* params);
    GLAPI void glGetQueryObjectiv(GLuint id, GLenum pname, GLint* params);
    GLAPI void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint* params);
    GLAPI void glBindBuffer(GLenum target, GLuint buffer);
    GLAPI void glDeleteBuffers(GLsizei n, const GLuint* buffers);
    GLAPI void glGenBuffers(GLsizei n, GLuint* buffers);
    GLAPI GLboolean glIsBuffer(GLuint buffer);
    GLAPI void glBufferData(GLenum target, GLsizeiptr size, const void* data, GLenum usage);
    GLAPI void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void* data);
    GLAPI void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void* data);
    GLAPI void* glMapBuffer(GLenum target, GLenum access);
    GLAPI GLboolean glUnmapBuffer(GLenum target);
    GLAPI void glGetBufferParameteriv(GLenum target, GLenum pname, GLint* params);
    GLAPI void glGetBufferPointerv(GLenum target, GLenum pname, void** params);
#endif

#endif
#ifndef GL_VERSION_2_0
#define GL_VERSION_2_0 1
    GLAPI int GLAD_GL_VERSION_2_0;

    typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
    typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum* bufs);
    typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
    typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
    typedef void (APIENTRYP PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
    typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar* name);
    typedef void (APIENTRYP PFNGLCOMPILESHADERPROC)(GLuint shader);
    typedef GLuint(APIENTRYP PFNGLCREATEPROGRAMPROC)(void);
    typedef GLuint(APIENTRYP PFNGLCREATESHADERPROC)(GLenum type);
    typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC)(GLuint program);
    typedef void (APIENTRYP PFNGLDELETESHADERPROC)(GLuint shader);
    typedef void (APIENTRYP PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
    typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
    typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
    typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
    typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
    typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
    typedef GLint(APIENTRYP PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar* name);
    typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
    typedef void (APIENTRYP PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
    typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
    typedef GLint(APIENTRYP PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar* name);
    typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat* params);
    typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint* params);
    typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble* params);
    typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat* params);
    typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void** pointer);
    typedef GLboolean(APIENTRYP PFNGLISPROGRAMPROC)(GLuint program);
    typedef GLboolean(APIENTRYP PFNGLISSHADERPROC)(GLuint shader);
    typedef void (APIENTRYP PFNGLLINKPROGRAMPROC)(GLuint program);
    typedef void (APIENTRYP PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length);
    typedef void (APIENTRYP PFNGLUSEPROGRAMPROC)(GLuint program);
    typedef void (APIENTRYP PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
    typedef void (APIENTRYP PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
    typedef void (APIENTRYP PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    typedef void (APIENTRYP PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    typedef void (APIENTRYP PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
    typedef void (APIENTRYP PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
    typedef void (APIENTRYP PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
    typedef void (APIENTRYP PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    typedef void (APIENTRYP PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint* value);
    typedef void (APIENTRYP PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint* value);
    typedef void (APIENTRYP PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint* value);
    typedef void (APIENTRYP PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC)(GLuint program);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer);

    GLAPI PFNGLBLENDEQUATIONSEPARATEPROC glad_glBlendEquationSeparate;
    GLAPI PFNGLDRAWBUFFERSPROC glad_glDrawBuffers;
    GLAPI PFNGLSTENCILOPSEPARATEPROC glad_glStencilOpSeparate;
    GLAPI PFNGLSTENCILFUNCSEPARATEPROC glad_glStencilFuncSeparate;
    GLAPI PFNGLSTENCILMASKSEPARATEPROC glad_glStencilMaskSeparate;
    GLAPI PFNGLATTACHSHADERPROC glad_glAttachShader;
    GLAPI PFNGLBINDATTRIBLOCATIONPROC glad_glBindAttribLocation;
    GLAPI PFNGLCOMPILESHADERPROC glad_glCompileShader;
    GLAPI PFNGLCREATEPROGRAMPROC glad_glCreateProgram;
    GLAPI PFNGLCREATESHADERPROC glad_glCreateShader;
    GLAPI PFNGLDELETEPROGRAMPROC glad_glDeleteProgram;
    GLAPI PFNGLDELETESHADERPROC glad_glDeleteShader;
    GLAPI PFNGLDETACHSHADERPROC glad_glDetachShader;
    GLAPI PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray;
    GLAPI PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray;
    GLAPI PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib;
    GLAPI PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform;
    GLAPI PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders;
    GLAPI PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation;
    GLAPI PFNGLGETPROGRAMIVPROC glad_glGetProgramiv;
    GLAPI PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog;
    GLAPI PFNGLGETSHADERIVPROC glad_glGetShaderiv;
    GLAPI PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog;
    GLAPI PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource;
    GLAPI PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation;
    GLAPI PFNGLGETUNIFORMFVPROC glad_glGetUniformfv;
    GLAPI PFNGLGETUNIFORMIVPROC glad_glGetUniformiv;
    GLAPI PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv;
    GLAPI PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv;
    GLAPI PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv;
    GLAPI PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv;
    GLAPI PFNGLISPROGRAMPROC glad_glIsProgram;
    GLAPI PFNGLISSHADERPROC glad_glIsShader;
    GLAPI PFNGLLINKPROGRAMPROC glad_glLinkProgram;
    GLAPI PFNGLSHADERSOURCEPROC glad_glShaderSource;
    GLAPI PFNGLUSEPROGRAMPROC glad_glUseProgram;
    GLAPI PFNGLUNIFORM1FPROC glad_glUniform1f;
    GLAPI PFNGLUNIFORM2FPROC glad_glUniform2f;
    GLAPI PFNGLUNIFORM3FPROC glad_glUniform3f;
    GLAPI PFNGLUNIFORM4FPROC glad_glUniform4f;
    GLAPI PFNGLUNIFORM1IPROC glad_glUniform1i;
    GLAPI PFNGLUNIFORM2IPROC glad_glUniform2i;
    GLAPI PFNGLUNIFORM3IPROC glad_glUniform3i;
    GLAPI PFNGLUNIFORM4IPROC glad_glUniform4i;
    GLAPI PFNGLUNIFORM1FVPROC glad_glUniform1fv;
    GLAPI PFNGLUNIFORM2FVPROC glad_glUniform2fv;
    GLAPI PFNGLUNIFORM3FVPROC glad_glUniform3fv;
    GLAPI PFNGLUNIFORM4FVPROC glad_glUniform4fv;
    GLAPI PFNGLUNIFORM1IVPROC glad_glUniform1iv;
    GLAPI PFNGLUNIFORM2IVPROC glad_glUniform2iv;
    GLAPI PFNGLUNIFORM3IVPROC glad_glUniform3iv;
    GLAPI PFNGLUNIFORM4IVPROC glad_glUniform4iv;
    GLAPI PFNGLUNIFORMMATRIX2FVPROC glad_glUniformMatrix2fv;
    GLAPI PFNGLUNIFORMMATRIX3FVPROC glad_glUniformMatrix3fv;
    GLAPI PFNGLUNIFORMMATRIX4FVPROC glad_glUniformMatrix4fv;
    GLAPI PFNGLVALIDATEPROGRAMPROC glad_glValidateProgram;
    GLAPI PFNGLVERTEXATTRIB1DPROC glad_glVertexAttrib1d;
    GLAPI PFNGLVERTEXATTRIB1DVPROC glad_glVertexAttrib1dv;
    GLAPI PFNGLVERTEXATTRIB1FPROC glad_glVertexAttrib1f;
    GLAPI PFNGLVERTEXATTRIB1FVPROC glad_glVertexAttrib1fv;
    GLAPI PFNGLVERTEXATTRIB1SPROC glad_glVertexAttrib1s;
    GLAPI PFNGLVERTEXATTRIB1SVPROC glad_glVertexAttrib1sv;
    GLAPI PFNGLVERTEXATTRIB2DPROC glad_glVertexAttrib2d;
    GLAPI PFNGLVERTEXATTRIB2DVPROC glad_glVertexAttrib2dv;
    GLAPI PFNGLVERTEXATTRIB2FPROC glad_glVertexAttrib2f;
    GLAPI PFNGLVERTEXATTRIB2FVPROC glad_glVertexAttrib2fv;
    GLAPI PFNGLVERTEXATTRIB2SPROC glad_glVertexAttrib2s;
    GLAPI PFNGLVERTEXATTRIB2SVPROC glad_glVertexAttrib2sv;
    GLAPI PFNGLVERTEXATTRIB3DPROC glad_glVertexAttrib3d;
    GLAPI PFNGLVERTEXATTRIB3DVPROC glad_glVertexAttrib3dv;
    GLAPI PFNGLVERTEXATTRIB3FPROC glad_glVertexAttrib3f;
    GLAPI PFNGLVERTEXATTRIB3FVPROC glad_glVertexAttrib3fv;
    GLAPI PFNGLVERTEXATTRIB3SPROC glad_glVertexAttrib3s;
    GLAPI PFNGLVERTEXATTRIB3SVPROC glad_glVertexAttrib3sv;
    GLAPI PFNGLVERTEXATTRIB4NBVPROC glad_glVertexAttrib4Nbv;
    GLAPI PFNGLVERTEXATTRIB4NIVPROC glad_glVertexAttrib4Niv;
    GLAPI PFNGLVERTEXATTRIB4NSVPROC glad_glVertexAttrib4Nsv;
    GLAPI PFNGLVERTEXATTRIB4NUBPROC glad_glVertexAttrib4Nub;
    GLAPI PFNGLVERTEXATTRIB4NUBVPROC glad_glVertexAttrib4Nubv;
    GLAPI PFNGLVERTEXATTRIB4NUIVPROC glad_glVertexAttrib4Nuiv;
    GLAPI PFNGLVERTEXATTRIB4NUSVPROC glad_glVertexAttrib4Nusv;
    GLAPI PFNGLVERTEXATTRIB4BVPROC glad_glVertexAttrib4bv;
    GLAPI PFNGLVERTEXATTRIB4DPROC glad_glVertexAttrib4d;
    GLAPI PFNGLVERTEXATTRIB4DVPROC glad_glVertexAttrib4dv;
    GLAPI PFNGLVERTEXATTRIB4FPROC glad_glVertexAttrib4f;
    GLAPI PFNGLVERTEXATTRIB4FVPROC glad_glVertexAttrib4fv;
    GLAPI PFNGLVERTEXATTRIB4IVPROC glad_glVertexAttrib4iv;
    GLAPI PFNGLVERTEXATTRIB4SPROC glad_glVertexAttrib4s;
    GLAPI PFNGLVERTEXATTRIB4SVPROC glad_glVertexAttrib4sv;
    GLAPI PFNGLVERTEXATTRIB4UBVPROC glad_glVertexAttrib4ubv;
    GLAPI PFNGLVERTEXATTRIB4UIVPROC glad_glVertexAttrib4uiv;
    GLAPI PFNGLVERTEXATTRIB4USVPROC glad_glVertexAttrib4usv;
    GLAPI PFNGLVERTEXATTRIBPOINTERPROC glad_glVertexAttribPointer;

#ifdef __GL_FUNCTION_MACROS__
#define glBlendEquationSeparate glad_glBlendEquationSeparate
#define glDrawBuffers glad_glDrawBuffers
#define glStencilOpSeparate glad_glStencilOpSeparate
#define glStencilFuncSeparate glad_glStencilFuncSeparate
#define glStencilMaskSeparate glad_glStencilMaskSeparate
#define glAttachShader glad_glAttachShader
#define glBindAttribLocation glad_glBindAttribLocation
#define glCompileShader glad_glCompileShader
#define glCreateProgram glad_glCreateProgram
#define glCreateShader glad_glCreateShader
#define glDeleteProgram glad_glDeleteProgram
#define glDeleteShader glad_glDeleteShader
#define glDetachShader glad_glDetachShader
#define glDisableVertexAttribArray glad_glDisableVertexAttribArray
#define glEnableVertexAttribArray glad_glEnableVertexAttribArray
#define glGetActiveAttrib glad_glGetActiveAttrib
#define glGetActiveUniform glad_glGetActiveUniform
#define glGetAttachedShaders glad_glGetAttachedShaders
#define glGetAttribLocation glad_glGetAttribLocation
#define glGetProgramiv glad_glGetProgramiv
#define glGetProgramInfoLog glad_glGetProgramInfoLog
#define glGetShaderiv glad_glGetShaderiv
#define glGetShaderInfoLog glad_glGetShaderInfoLog
#define glGetShaderSource glad_glGetShaderSource
#define glGetUniformLocation glad_glGetUniformLocation
#define glGetUniformfv glad_glGetUniformfv
#define glGetUniformiv glad_glGetUniformiv
#define glGetVertexAttribdv glad_glGetVertexAttribdv
#define glGetVertexAttribfv glad_glGetVertexAttribfv
#define glGetVertexAttribiv glad_glGetVertexAttribiv
#define glGetVertexAttribPointerv glad_glGetVertexAttribPointerv
#define glIsProgram glad_glIsProgram
#define glIsShader glad_glIsShader
#define glLinkProgram glad_glLinkProgram
#define glShaderSource glad_glShaderSource
#define glUseProgram glad_glUseProgram
#define glUniform1f glad_glUniform1f
#define glUniform2f glad_glUniform2f
#define glUniform3f glad_glUniform3f
#define glUniform4f glad_glUniform4f
#define glUniform1i glad_glUniform1i
#define glUniform2i glad_glUniform2i
#define glUniform3i glad_glUniform3i
#define glUniform4i glad_glUniform4i
#define glUniform1fv glad_glUniform1fv
#define glUniform2fv glad_glUniform2fv
#define glUniform3fv glad_glUniform3fv
#define glUniform4fv glad_glUniform4fv
#define glUniform1iv glad_glUniform1iv
#define glUniform2iv glad_glUniform2iv
#define glUniform3iv glad_glUniform3iv
#define glUniform4iv glad_glUniform4iv
#define glUniformMatrix2fv glad_glUniformMatrix2fv
#define glUniformMatrix3fv glad_glUniformMatrix3fv
#define glUniformMatrix4fv glad_glUniformMatrix4fv
#define glValidateProgram glad_glValidateProgram
#define glVertexAttrib1d glad_glVertexAttrib1d
#define glVertexAttrib1dv glad_glVertexAttrib1dv
#define glVertexAttrib1f glad_glVertexAttrib1f
#define glVertexAttrib1fv glad_glVertexAttrib1fv
#define glVertexAttrib1s glad_glVertexAttrib1s
#define glVertexAttrib1sv glad_glVertexAttrib1sv
#define glVertexAttrib2d glad_glVertexAttrib2d
#define glVertexAttrib2dv glad_glVertexAttrib2dv
#define glVertexAttrib2f glad_glVertexAttrib2f
#define glVertexAttrib2fv glad_glVertexAttrib2fv
#define glVertexAttrib2s glad_glVertexAttrib2s
#define glVertexAttrib2sv glad_glVertexAttrib2sv
#define glVertexAttrib3d glad_glVertexAttrib3d
#define glVertexAttrib3dv glad_glVertexAttrib3dv
#define glVertexAttrib3f glad_glVertexAttrib3f
#define glVertexAttrib3fv glad_glVertexAttrib3fv
#define glVertexAttrib3s glad_glVertexAttrib3s
#define glVertexAttrib3sv glad_glVertexAttrib3sv
#define glVertexAttrib4Nbv glad_glVertexAttrib4Nbv
#define glVertexAttrib4Niv glad_glVertexAttrib4Niv
#define glVertexAttrib4Nsv glad_glVertexAttrib4Nsv
#define glVertexAttrib4Nub glad_glVertexAttrib4Nub
#define glVertexAttrib4Nubv glad_glVertexAttrib4Nubv
#define glVertexAttrib4Nuiv glad_glVertexAttrib4Nuiv
#define glVertexAttrib4Nusv glad_glVertexAttrib4Nusv
#define glVertexAttrib4bv glad_glVertexAttrib4bv
#define glVertexAttrib4d glad_glVertexAttrib4d
#define glVertexAttrib4dv glad_glVertexAttrib4dv
#define glVertexAttrib4f glad_glVertexAttrib4f
#define glVertexAttrib4fv glad_glVertexAttrib4fv
#define glVertexAttrib4iv glad_glVertexAttrib4iv
#define glVertexAttrib4s glad_glVertexAttrib4s
#define glVertexAttrib4sv glad_glVertexAttrib4sv
#define glVertexAttrib4ubv glad_glVertexAttrib4ubv
#define glVertexAttrib4uiv glad_glVertexAttrib4uiv
#define glVertexAttrib4usv glad_glVertexAttrib4usv
#define glVertexAttribPointer glad_glVertexAttribPointer
#else
    GLAPI void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
    GLAPI void glDrawBuffers(GLsizei n, const GLenum* bufs);
    GLAPI void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
    GLAPI void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
    GLAPI void glStencilMaskSeparate(GLenum face, GLuint mask);
    GLAPI void glAttachShader(GLuint program, GLuint shader);
    GLAPI void glBindAttribLocation(GLuint program, GLuint index, const GLchar* name);
    GLAPI void glCompileShader(GLuint shader);
    GLAPI GLuint glCreateProgram();
    GLAPI GLuint glCreateShader(GLenum type);
    GLAPI void glDeleteProgram(GLuint program);
    GLAPI void glDeleteShader(GLuint shader);
    GLAPI void glDetachShader(GLuint program, GLuint shader);
    GLAPI void glDisableVertexAttribArray(GLuint index);
    GLAPI void glEnableVertexAttribArray(GLuint index);
    GLAPI void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
    GLAPI void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
    GLAPI void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
    GLAPI GLint glGetAttribLocation(GLuint program, const GLchar* name);
    GLAPI void glGetProgramiv(GLuint program, GLenum pname, GLint* params);
    GLAPI void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
    GLAPI void glGetShaderiv(GLuint shader, GLenum pname, GLint* params);
    GLAPI void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
    GLAPI void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
    GLAPI GLint glGetUniformLocation(GLuint program, const GLchar* name);
    GLAPI void glGetUniformfv(GLuint program, GLint location, GLfloat* params);
    GLAPI void glGetUniformiv(GLuint program, GLint location, GLint* params);
    GLAPI void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble* params);
    GLAPI void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat* params);
    GLAPI void glGetVertexAttribiv(GLuint index, GLenum pname, GLint* params);
    GLAPI void glGetVertexAttribPointerv(GLuint index, GLenum pname, void** pointer);
    GLAPI GLboolean glIsProgram(GLuint program);
    GLAPI GLboolean glIsShader(GLuint shader);
    GLAPI void glLinkProgram(GLuint program);
    GLAPI void glShaderSource(GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length);
    GLAPI void glUseProgram(GLuint program);
    GLAPI void glUniform1f(GLint location, GLfloat v0);
    GLAPI void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
    GLAPI void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    GLAPI void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    GLAPI void glUniform1i(GLint location, GLint v0);
    GLAPI void glUniform2i(GLint location, GLint v0, GLint v1);
    GLAPI void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
    GLAPI void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    GLAPI void glUniform1fv(GLint location, GLsizei count, const GLfloat* value);
    GLAPI void glUniform2fv(GLint location, GLsizei count, const GLfloat* value);
    GLAPI void glUniform3fv(GLint location, GLsizei count, const GLfloat* value);
    GLAPI void glUniform4fv(GLint location, GLsizei count, const GLfloat* value);
    GLAPI void glUniform1iv(GLint location, GLsizei count, const GLint* value);
    GLAPI void glUniform2iv(GLint location, GLsizei count, const GLint* value);
    GLAPI void glUniform3iv(GLint location, GLsizei count, const GLint* value);
    GLAPI void glUniform4iv(GLint location, GLsizei count, const GLint* value);
    GLAPI void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glValidateProgram(GLuint program);
    GLAPI void glVertexAttrib1d(GLuint index, GLdouble x);
    GLAPI void glVertexAttrib1dv(GLuint index, const GLdouble* v);
    GLAPI void glVertexAttrib1f(GLuint index, GLfloat x);
    GLAPI void glVertexAttrib1fv(GLuint index, const GLfloat* v);
    GLAPI void glVertexAttrib1s(GLuint index, GLshort x);
    GLAPI void glVertexAttrib1sv(GLuint index, const GLshort* v);
    GLAPI void glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
    GLAPI void glVertexAttrib2dv(GLuint index, const GLdouble* v);
    GLAPI void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
    GLAPI void glVertexAttrib2fv(GLuint index, const GLfloat* v);
    GLAPI void glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
    GLAPI void glVertexAttrib2sv(GLuint index, const GLshort* v);
    GLAPI void glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    GLAPI void glVertexAttrib3dv(GLuint index, const GLdouble* v);
    GLAPI void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
    GLAPI void glVertexAttrib3fv(GLuint index, const GLfloat* v);
    GLAPI void glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
    GLAPI void glVertexAttrib3sv(GLuint index, const GLshort* v);
    GLAPI void glVertexAttrib4Nbv(GLuint index, const GLbyte* v);
    GLAPI void glVertexAttrib4Niv(GLuint index, const GLint* v);
    GLAPI void glVertexAttrib4Nsv(GLuint index, const GLshort* v);
    GLAPI void glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
    GLAPI void glVertexAttrib4Nubv(GLuint index, const GLubyte* v);
    GLAPI void glVertexAttrib4Nuiv(GLuint index, const GLuint* v);
    GLAPI void glVertexAttrib4Nusv(GLuint index, const GLushort* v);
    GLAPI void glVertexAttrib4bv(GLuint index, const GLbyte* v);
    GLAPI void glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    GLAPI void glVertexAttrib4dv(GLuint index, const GLdouble* v);
    GLAPI void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
    GLAPI void glVertexAttrib4fv(GLuint index, const GLfloat* v);
    GLAPI void glVertexAttrib4iv(GLuint index, const GLint* v);
    GLAPI void glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
    GLAPI void glVertexAttrib4sv(GLuint index, const GLshort* v);
    GLAPI void glVertexAttrib4ubv(GLuint index, const GLubyte* v);
    GLAPI void glVertexAttrib4uiv(GLuint index, const GLuint* v);
    GLAPI void glVertexAttrib4usv(GLuint index, const GLushort* v);
    GLAPI void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer);
#endif

#endif
#ifndef GL_VERSION_2_1
#define GL_VERSION_2_1 1
    GLAPI int GLAD_GL_VERSION_2_1;

    typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);

    GLAPI PFNGLUNIFORMMATRIX2X3FVPROC glad_glUniformMatrix2x3fv;
    GLAPI PFNGLUNIFORMMATRIX3X2FVPROC glad_glUniformMatrix3x2fv;
    GLAPI PFNGLUNIFORMMATRIX2X4FVPROC glad_glUniformMatrix2x4fv;
    GLAPI PFNGLUNIFORMMATRIX4X2FVPROC glad_glUniformMatrix4x2fv;
    GLAPI PFNGLUNIFORMMATRIX3X4FVPROC glad_glUniformMatrix3x4fv;
    GLAPI PFNGLUNIFORMMATRIX4X3FVPROC glad_glUniformMatrix4x3fv;

#ifdef __GL_FUNCTION_MACROS__
#define glUniformMatrix2x3fv glad_glUniformMatrix2x3fv
#define glUniformMatrix3x2fv glad_glUniformMatrix3x2fv
#define glUniformMatrix2x4fv glad_glUniformMatrix2x4fv
#define glUniformMatrix4x2fv glad_glUniformMatrix4x2fv
#define glUniformMatrix3x4fv glad_glUniformMatrix3x4fv
#define glUniformMatrix4x3fv glad_glUniformMatrix4x3fv
#else
    GLAPI void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
    GLAPI void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
#endif

#endif
#ifndef GL_VERSION_3_0
#define GL_VERSION_3_0 1
    GLAPI int GLAD_GL_VERSION_3_0;

    typedef void (APIENTRYP PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean* data);
    typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint* data);
    typedef void (APIENTRYP PFNGLENABLEIPROC)(GLenum target, GLuint index);
    typedef void (APIENTRYP PFNGLDISABLEIPROC)(GLenum target, GLuint index);
    typedef GLboolean(APIENTRYP PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
    typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
    typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC)(void);
    typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
    typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar* const* varyings, GLenum bufferMode);
    typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
    typedef void (APIENTRYP PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
    typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
    typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC)(void);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);
    typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint* params);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte* v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort* v);
    typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint* params);
    typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar* name);
    typedef GLint(APIENTRYP PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar* name);
    typedef void (APIENTRYP PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
    typedef void (APIENTRYP PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
    typedef void (APIENTRYP PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
    typedef void (APIENTRYP PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint* value);
    typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint* value);
    typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint* value);
    typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint* value);
    typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint* params);
    typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint* params);
    typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint* params);
    typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint* value);
    typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint* value);
    typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat* value);
    typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    typedef const GLubyte* (APIENTRYP PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
    typedef GLboolean(APIENTRYP PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
    typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
    typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint* renderbuffers);
    typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint* renderbuffers);
    typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
    typedef GLboolean(APIENTRYP PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
    typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
    typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint* framebuffers);
    typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint* framebuffers);
    typedef GLenum(APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
    typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC)(GLenum target);
    typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    typedef void* (APIENTRYP PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
    typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
    typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC)(GLuint array);
    typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint* arrays);
    typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint* arrays);
    typedef GLboolean(APIENTRYP PFNGLISVERTEXARRAYPROC)(GLuint array);

    GLAPI PFNGLCOLORMASKIPROC glad_glColorMaski;
    GLAPI PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v;
    GLAPI PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v;
    GLAPI PFNGLENABLEIPROC glad_glEnablei;
    GLAPI PFNGLDISABLEIPROC glad_glDisablei;
    GLAPI PFNGLISENABLEDIPROC glad_glIsEnabledi;
    GLAPI PFNGLBEGINTRANSFORMFEEDBACKPROC glad_glBeginTransformFeedback;
    GLAPI PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback;
    GLAPI PFNGLBINDBUFFERRANGEPROC glad_glBindBufferRange;
    GLAPI PFNGLBINDBUFFERBASEPROC glad_glBindBufferBase;
    GLAPI PFNGLTRANSFORMFEEDBACKVARYINGSPROC glad_glTransformFeedbackVaryings;
    GLAPI PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying;
    GLAPI PFNGLCLAMPCOLORPROC glad_glClampColor;
    GLAPI PFNGLBEGINCONDITIONALRENDERPROC glad_glBeginConditionalRender;
    GLAPI PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender;
    GLAPI PFNGLVERTEXATTRIBIPOINTERPROC glad_glVertexAttribIPointer;
    GLAPI PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv;
    GLAPI PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv;
    GLAPI PFNGLVERTEXATTRIBI1IPROC glad_glVertexAttribI1i;
    GLAPI PFNGLVERTEXATTRIBI2IPROC glad_glVertexAttribI2i;
    GLAPI PFNGLVERTEXATTRIBI3IPROC glad_glVertexAttribI3i;
    GLAPI PFNGLVERTEXATTRIBI4IPROC glad_glVertexAttribI4i;
    GLAPI PFNGLVERTEXATTRIBI1UIPROC glad_glVertexAttribI1ui;
    GLAPI PFNGLVERTEXATTRIBI2UIPROC glad_glVertexAttribI2ui;
    GLAPI PFNGLVERTEXATTRIBI3UIPROC glad_glVertexAttribI3ui;
    GLAPI PFNGLVERTEXATTRIBI4UIPROC glad_glVertexAttribI4ui;
    GLAPI PFNGLVERTEXATTRIBI1IVPROC glad_glVertexAttribI1iv;
    GLAPI PFNGLVERTEXATTRIBI2IVPROC glad_glVertexAttribI2iv;
    GLAPI PFNGLVERTEXATTRIBI3IVPROC glad_glVertexAttribI3iv;
    GLAPI PFNGLVERTEXATTRIBI4IVPROC glad_glVertexAttribI4iv;
    GLAPI PFNGLVERTEXATTRIBI1UIVPROC glad_glVertexAttribI1uiv;
    GLAPI PFNGLVERTEXATTRIBI2UIVPROC glad_glVertexAttribI2uiv;
    GLAPI PFNGLVERTEXATTRIBI3UIVPROC glad_glVertexAttribI3uiv;
    GLAPI PFNGLVERTEXATTRIBI4UIVPROC glad_glVertexAttribI4uiv;
    GLAPI PFNGLVERTEXATTRIBI4BVPROC glad_glVertexAttribI4bv;
    GLAPI PFNGLVERTEXATTRIBI4SVPROC glad_glVertexAttribI4sv;
    GLAPI PFNGLVERTEXATTRIBI4UBVPROC glad_glVertexAttribI4ubv;
    GLAPI PFNGLVERTEXATTRIBI4USVPROC glad_glVertexAttribI4usv;
    GLAPI PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv;
    GLAPI PFNGLBINDFRAGDATALOCATIONPROC glad_glBindFragDataLocation;
    GLAPI PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation;
    GLAPI PFNGLUNIFORM1UIPROC glad_glUniform1ui;
    GLAPI PFNGLUNIFORM2UIPROC glad_glUniform2ui;
    GLAPI PFNGLUNIFORM3UIPROC glad_glUniform3ui;
    GLAPI PFNGLUNIFORM4UIPROC glad_glUniform4ui;
    GLAPI PFNGLUNIFORM1UIVPROC glad_glUniform1uiv;
    GLAPI PFNGLUNIFORM2UIVPROC glad_glUniform2uiv;
    GLAPI PFNGLUNIFORM3UIVPROC glad_glUniform3uiv;
    GLAPI PFNGLUNIFORM4UIVPROC glad_glUniform4uiv;
    GLAPI PFNGLTEXPARAMETERIIVPROC glad_glTexParameterIiv;
    GLAPI PFNGLTEXPARAMETERIUIVPROC glad_glTexParameterIuiv;
    GLAPI PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv;
    GLAPI PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv;
    GLAPI PFNGLCLEARBUFFERIVPROC glad_glClearBufferiv;
    GLAPI PFNGLCLEARBUFFERUIVPROC glad_glClearBufferuiv;
    GLAPI PFNGLCLEARBUFFERFVPROC glad_glClearBufferfv;
    GLAPI PFNGLCLEARBUFFERFIPROC glad_glClearBufferfi;
    GLAPI PFNGLGETSTRINGIPROC glad_glGetStringi;
    GLAPI PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer;
    GLAPI PFNGLBINDRENDERBUFFERPROC glad_glBindRenderbuffer;
    GLAPI PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers;
    GLAPI PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers;
    GLAPI PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage;
    GLAPI PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv;
    GLAPI PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer;
    GLAPI PFNGLBINDFRAMEBUFFERPROC glad_glBindFramebuffer;
    GLAPI PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers;
    GLAPI PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers;
    GLAPI PFNGLCHECKFRAMEBUFFERSTATUSPROC glad_glCheckFramebufferStatus;
    GLAPI PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D;
    GLAPI PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D;
    GLAPI PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D;
    GLAPI PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer;
    GLAPI PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv;
    GLAPI PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap;
    GLAPI PFNGLBLITFRAMEBUFFERPROC glad_glBlitFramebuffer;
    GLAPI PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glRenderbufferStorageMultisample;
    GLAPI PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer;
    GLAPI PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange;
    GLAPI PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange;
    GLAPI PFNGLBINDVERTEXARRAYPROC glad_glBindVertexArray;
    GLAPI PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays;
    GLAPI PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays;
    GLAPI PFNGLISVERTEXARRAYPROC glad_glIsVertexArray;

#ifdef __GL_FUNCTION_MACROS__
#define glColorMaski glad_glColorMaski
#define glGetBooleani_v glad_glGetBooleani_v
#define glGetIntegeri_v glad_glGetIntegeri_v
#define glEnablei glad_glEnablei
#define glDisablei glad_glDisablei
#define glIsEnabledi glad_glIsEnabledi
#define glBeginTransformFeedback glad_glBeginTransformFeedback
#define glEndTransformFeedback glad_glEndTransformFeedback
#define glBindBufferRange glad_glBindBufferRange
#define glBindBufferBase glad_glBindBufferBase
#define glTransformFeedbackVaryings glad_glTransformFeedbackVaryings
#define glGetTransformFeedbackVarying glad_glGetTransformFeedbackVarying
#define glClampColor glad_glClampColor
#define glBeginConditionalRender glad_glBeginConditionalRender
#define glEndConditionalRender glad_glEndConditionalRender
#define glVertexAttribIPointer glad_glVertexAttribIPointer
#define glGetVertexAttribIiv glad_glGetVertexAttribIiv
#define glGetVertexAttribIuiv glad_glGetVertexAttribIuiv
#define glVertexAttribI1i glad_glVertexAttribI1i
#define glVertexAttribI2i glad_glVertexAttribI2i
#define glVertexAttribI3i glad_glVertexAttribI3i
#define glVertexAttribI4i glad_glVertexAttribI4i
#define glVertexAttribI1ui glad_glVertexAttribI1ui
#define glVertexAttribI2ui glad_glVertexAttribI2ui
#define glVertexAttribI3ui glad_glVertexAttribI3ui
#define glVertexAttribI4ui glad_glVertexAttribI4ui
#define glVertexAttribI1iv glad_glVertexAttribI1iv
#define glVertexAttribI2iv glad_glVertexAttribI2iv
#define glVertexAttribI3iv glad_glVertexAttribI3iv
#define glVertexAttribI4iv glad_glVertexAttribI4iv
#define glVertexAttribI1uiv glad_glVertexAttribI1uiv
#define glVertexAttribI2uiv glad_glVertexAttribI2uiv
#define glVertexAttribI3uiv glad_glVertexAttribI3uiv
#define glVertexAttribI4uiv glad_glVertexAttribI4uiv
#define glVertexAttribI4bv glad_glVertexAttribI4bv
#define glVertexAttribI4sv glad_glVertexAttribI4sv
#define glVertexAttribI4ubv glad_glVertexAttribI4ubv
#define glVertexAttribI4usv glad_glVertexAttribI4usv
#define glGetUniformuiv glad_glGetUniformuiv
#define glBindFragDataLocation glad_glBindFragDataLocation
#define glGetFragDataLocation glad_glGetFragDataLocation
#define glUniform1ui glad_glUniform1ui
#define glUniform2ui glad_glUniform2ui
#define glUniform3ui glad_glUniform3ui
#define glUniform4ui glad_glUniform4ui
#define glUniform1uiv glad_glUniform1uiv
#define glUniform2uiv glad_glUniform2uiv
#define glUniform3uiv glad_glUniform3uiv
#define glUniform4uiv glad_glUniform4uiv
#define glTexParameterIiv glad_glTexParameterIiv
#define glTexParameterIuiv glad_glTexParameterIuiv
#define glGetTexParameterIiv glad_glGetTexParameterIiv
#define glGetTexParameterIuiv glad_glGetTexParameterIuiv
#define glClearBufferiv glad_glClearBufferiv
#define glClearBufferuiv glad_glClearBufferuiv
#define glClearBufferfv glad_glClearBufferfv
#define glClearBufferfi glad_glClearBufferfi
#define glGetStringi glad_glGetStringi
#define glIsRenderbuffer glad_glIsRenderbuffer
#define glBindRenderbuffer glad_glBindRenderbuffer
#define glDeleteRenderbuffers glad_glDeleteRenderbuffers
#define glGenRenderbuffers glad_glGenRenderbuffers
#define glRenderbufferStorage glad_glRenderbufferStorage
#define glGetRenderbufferParameteriv glad_glGetRenderbufferParameteriv
#define glIsFramebuffer glad_glIsFramebuffer
#define glBindFramebuffer glad_glBindFramebuffer
#define glDeleteFramebuffers glad_glDeleteFramebuffers
#define glGenFramebuffers glad_glGenFramebuffers
#define glCheckFramebufferStatus glad_glCheckFramebufferStatus
#define glFramebufferTexture1D glad_glFramebufferTexture1D
#define glFramebufferTexture2D glad_glFramebufferTexture2D
#define glFramebufferTexture3D glad_glFramebufferTexture3D
#define glFramebufferRenderbuffer glad_glFramebufferRenderbuffer
#define glGetFramebufferAttachmentParameteriv glad_glGetFramebufferAttachmentParameteriv
#define glGenerateMipmap glad_glGenerateMipmap
#define glBlitFramebuffer glad_glBlitFramebuffer
#define glRenderbufferStorageMultisample glad_glRenderbufferStorageMultisample
#define glFramebufferTextureLayer glad_glFramebufferTextureLayer
#define glMapBufferRange glad_glMapBufferRange
#define glFlushMappedBufferRange glad_glFlushMappedBufferRange
#define glBindVertexArray glad_glBindVertexArray
#define glDeleteVertexArrays glad_glDeleteVertexArrays
#define glGenVertexArrays glad_glGenVertexArrays
#define glIsVertexArray glad_glIsVertexArray
#else
    GLAPI void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
    GLAPI void glGetBooleani_v(GLenum target, GLuint index, GLboolean* data);
    GLAPI void glGetIntegeri_v(GLenum target, GLuint index, GLint* data);
    GLAPI void glEnablei(GLenum target, GLuint index);
    GLAPI void glDisablei(GLenum target, GLuint index);
    GLAPI GLboolean glIsEnabledi(GLenum target, GLuint index);
    GLAPI void glBeginTransformFeedback(GLenum primitiveMode);
    GLAPI void glEndTransformFeedback();
    GLAPI void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    GLAPI void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
    GLAPI void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar* const* varyings, GLenum bufferMode);
    GLAPI void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
    GLAPI void glClampColor(GLenum target, GLenum clamp);
    GLAPI void glBeginConditionalRender(GLuint id, GLenum mode);
    GLAPI void glEndConditionalRender();
    GLAPI void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);
    GLAPI void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint* params);
    GLAPI void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint* params);
    GLAPI void glVertexAttribI1i(GLuint index, GLint x);
    GLAPI void glVertexAttribI2i(GLuint index, GLint x, GLint y);
    GLAPI void glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
    GLAPI void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
    GLAPI void glVertexAttribI1ui(GLuint index, GLuint x);
    GLAPI void glVertexAttribI2ui(GLuint index, GLuint x, GLuint y);
    GLAPI void glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
    GLAPI void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
    GLAPI void glVertexAttribI1iv(GLuint index, const GLint* v);
    GLAPI void glVertexAttribI2iv(GLuint index, const GLint* v);
    GLAPI void glVertexAttribI3iv(GLuint index, const GLint* v);
    GLAPI void glVertexAttribI4iv(GLuint index, const GLint* v);
    GLAPI void glVertexAttribI1uiv(GLuint index, const GLuint* v);
    GLAPI void glVertexAttribI2uiv(GLuint index, const GLuint* v);
    GLAPI void glVertexAttribI3uiv(GLuint index, const GLuint* v);
    GLAPI void glVertexAttribI4uiv(GLuint index, const GLuint* v);
    GLAPI void glVertexAttribI4bv(GLuint index, const GLbyte* v);
    GLAPI void glVertexAttribI4sv(GLuint index, const GLshort* v);
    GLAPI void glVertexAttribI4ubv(GLuint index, const GLubyte* v);
    GLAPI void glVertexAttribI4usv(GLuint index, const GLushort* v);
    GLAPI void glGetUniformuiv(GLuint program, GLint location, GLuint* params);
    GLAPI void glBindFragDataLocation(GLuint program, GLuint color, const GLchar* name);
    GLAPI GLint glGetFragDataLocation(GLuint program, const GLchar* name);
    GLAPI void glUniform1ui(GLint location, GLuint v0);
    GLAPI void glUniform2ui(GLint location, GLuint v0, GLuint v1);
    GLAPI void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
    GLAPI void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    GLAPI void glUniform1uiv(GLint location, GLsizei count, const GLuint* value);
    GLAPI void glUniform2uiv(GLint location, GLsizei count, const GLuint* value);
    GLAPI void glUniform3uiv(GLint location, GLsizei count, const GLuint* value);
    GLAPI void glUniform4uiv(GLint location, GLsizei count, const GLuint* value);
    GLAPI void glTexParameterIiv(GLenum target, GLenum pname, const GLint* params);
    GLAPI void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint* params);
    GLAPI void glGetTexParameterIiv(GLenum target, GLenum pname, GLint* params);
    GLAPI void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint* params);
    GLAPI void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint* value);
    GLAPI void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint* value);
    GLAPI void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat* value);
    GLAPI void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    GLAPI const GLubyte* glGetStringi(GLenum name, GLuint index);
    GLAPI GLboolean glIsRenderbuffer(GLuint renderbuffer);
    GLAPI void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
    GLAPI void glDeleteRenderbuffers(GLsizei n, const GLuint* renderbuffers);
    GLAPI void glGenRenderbuffers(GLsizei n, GLuint* renderbuffers);
    GLAPI void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
    GLAPI void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint* params);
    GLAPI GLboolean glIsFramebuffer(GLuint framebuffer);
    GLAPI void glBindFramebuffer(GLenum target, GLuint framebuffer);
    GLAPI void glDeleteFramebuffers(GLsizei n, const GLuint* framebuffers);
    GLAPI void glGenFramebuffers(GLsizei n, GLuint* framebuffers);
    GLAPI GLenum glCheckFramebufferStatus(GLenum target);
    GLAPI void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    GLAPI void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
    GLAPI void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
    GLAPI void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    GLAPI void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint* params);
    GLAPI void glGenerateMipmap(GLenum target);
    GLAPI void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    GLAPI void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    GLAPI void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
    GLAPI void* glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
    GLAPI void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
    GLAPI void glBindVertexArray(GLuint array);
    GLAPI void glDeleteVertexArrays(GLsizei n, const GLuint* arrays);
    GLAPI void glGenVertexArrays(GLsizei n, GLuint* arrays);
    GLAPI GLboolean glIsVertexArray(GLuint array);
#endif

#endif
#ifndef GL_VERSION_3_1
#define GL_VERSION_3_1 1
    GLAPI int GLAD_GL_VERSION_3_1;

    typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
    typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount);
    typedef void (APIENTRYP PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
    typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
    typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar* const* uniformNames, GLuint* uniformIndices);
    typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
    typedef GLuint(APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar* uniformBlockName);
    typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
    typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

    GLAPI PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced;
    GLAPI PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced;
    GLAPI PFNGLTEXBUFFERPROC glad_glTexBuffer;
    GLAPI PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex;
    GLAPI PFNGLCOPYBUFFERSUBDATAPROC glad_glCopyBufferSubData;
    GLAPI PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices;
    GLAPI PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv;
    GLAPI PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName;
    GLAPI PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex;
    GLAPI PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv;
    GLAPI PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName;
    GLAPI PFNGLUNIFORMBLOCKBINDINGPROC glad_glUniformBlockBinding;

#ifdef __GL_FUNCTION_MACROS__
#define glDrawArraysInstanced glad_glDrawArraysInstanced
#define glDrawElementsInstanced glad_glDrawElementsInstanced
#define glTexBuffer glad_glTexBuffer
#define glPrimitiveRestartIndex glad_glPrimitiveRestartIndex
#define glCopyBufferSubData glad_glCopyBufferSubData
#define glGetUniformIndices glad_glGetUniformIndices
#define glGetActiveUniformsiv glad_glGetActiveUniformsiv
#define glGetActiveUniformName glad_glGetActiveUniformName
#define glGetUniformBlockIndex glad_glGetUniformBlockIndex
#define glGetActiveUniformBlockiv glad_glGetActiveUniformBlockiv
#define glGetActiveUniformBlockName glad_glGetActiveUniformBlockName
#define glUniformBlockBinding glad_glUniformBlockBinding
#else
    GLAPI void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
    GLAPI void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount);
    GLAPI void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
    GLAPI void glPrimitiveRestartIndex(GLuint index);
    GLAPI void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    GLAPI void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar* const* uniformNames, GLuint* uniformIndices);
    GLAPI void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
    GLAPI void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
    GLAPI GLuint glGetUniformBlockIndex(GLuint program, const GLchar* uniformBlockName);
    GLAPI void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
    GLAPI void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
    GLAPI void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
#endif

#endif
#ifndef GL_VERSION_3_2
#define GL_VERSION_3_2 1
    GLAPI int GLAD_GL_VERSION_3_2;

    typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLint basevertex);
    typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices, GLint basevertex);
    typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLint basevertex);
    typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei* count, GLenum type, const void* const* indices, GLsizei drawcount, const GLint* basevertex);
    typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
    typedef GLsync(APIENTRYP PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
    typedef GLboolean(APIENTRYP PFNGLISSYNCPROC)(GLsync sync);
    typedef void (APIENTRYP PFNGLDELETESYNCPROC)(GLsync sync);
    typedef GLenum(APIENTRYP PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
    typedef void (APIENTRYP PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
    typedef void (APIENTRYP PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64* data);
    typedef void (APIENTRYP PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei* length, GLint* values);
    typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64* data);
    typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64* params);
    typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
    typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat* val);
    typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);

    GLAPI PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex;
    GLAPI PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex;
    GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex;
    GLAPI PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex;
    GLAPI PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex;
    GLAPI PFNGLFENCESYNCPROC glad_glFenceSync;
    GLAPI PFNGLISSYNCPROC glad_glIsSync;
    GLAPI PFNGLDELETESYNCPROC glad_glDeleteSync;
    GLAPI PFNGLCLIENTWAITSYNCPROC glad_glClientWaitSync;
    GLAPI PFNGLWAITSYNCPROC glad_glWaitSync;
    GLAPI PFNGLGETINTEGER64VPROC glad_glGetInteger64v;
    GLAPI PFNGLGETSYNCIVPROC glad_glGetSynciv;
    GLAPI PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v;
    GLAPI PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v;
    GLAPI PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture;
    GLAPI PFNGLTEXIMAGE2DMULTISAMPLEPROC glad_glTexImage2DMultisample;
    GLAPI PFNGLTEXIMAGE3DMULTISAMPLEPROC glad_glTexImage3DMultisample;
    GLAPI PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv;
    GLAPI PFNGLSAMPLEMASKIPROC glad_glSampleMaski;

#ifdef __GL_FUNCTION_MACROS__
#define glDrawElementsBaseVertex glad_glDrawElementsBaseVertex
#define glDrawRangeElementsBaseVertex glad_glDrawRangeElementsBaseVertex
#define glDrawElementsInstancedBaseVertex glad_glDrawElementsInstancedBaseVertex
#define glMultiDrawElementsBaseVertex glad_glMultiDrawElementsBaseVertex
#define glProvokingVertex glad_glProvokingVertex
#define glFenceSync glad_glFenceSync
#define glIsSync glad_glIsSync
#define glDeleteSync glad_glDeleteSync
#define glClientWaitSync glad_glClientWaitSync
#define glWaitSync glad_glWaitSync
#define glGetInteger64v glad_glGetInteger64v
#define glGetSynciv glad_glGetSynciv
#define glGetInteger64i_v glad_glGetInteger64i_v
#define glGetBufferParameteri64v glad_glGetBufferParameteri64v
#define glFramebufferTexture glad_glFramebufferTexture
#define glTexImage2DMultisample glad_glTexImage2DMultisample
#define glTexImage3DMultisample glad_glTexImage3DMultisample
#define glGetMultisamplefv glad_glGetMultisamplefv
#define glSampleMaski glad_glSampleMaski
#else
    GLAPI void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void* indices, GLint basevertex);
    GLAPI void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void* indices, GLint basevertex);
    GLAPI void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei instancecount, GLint basevertex);
    GLAPI void glMultiDrawElementsBaseVertex(GLenum mode, const GLsizei* count, GLenum type, const void* const* indices, GLsizei drawcount, const GLint* basevertex);
    GLAPI void glProvokingVertex(GLenum mode);
    GLAPI GLsync glFenceSync(GLenum condition, GLbitfield flags);
    GLAPI GLboolean glIsSync(GLsync sync);
    GLAPI void glDeleteSync(GLsync sync);
    GLAPI GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
    GLAPI void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
    GLAPI void glGetInteger64v(GLenum pname, GLint64* data);
    GLAPI void glGetSynciv(GLsync sync, GLenum pname, GLsizei count, GLsizei* length, GLint* values);
    GLAPI void glGetInteger64i_v(GLenum target, GLuint index, GLint64* data);
    GLAPI void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64* params);
    GLAPI void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
    GLAPI void glTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    GLAPI void glTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    GLAPI void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat* val);
    GLAPI void glSampleMaski(GLuint maskNumber, GLbitfield mask);
#endif

#endif
#ifndef GL_VERSION_3_3
#define GL_VERSION_3_3 1
    GLAPI int GLAD_GL_VERSION_3_3;

    typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar* name);
    typedef GLint(APIENTRYP PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar* name);
    typedef void (APIENTRYP PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint* samplers);
    typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint* samplers);
    typedef GLboolean(APIENTRYP PFNGLISSAMPLERPROC)(GLuint sampler);
    typedef void (APIENTRYP PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
    typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
    typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint* param);
    typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
    typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat* param);
    typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint* param);
    typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint* param);
    typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint* params);
    typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat* params);
    typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint* params);
    typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
    typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64* params);
    typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64* params);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    typedef void (APIENTRYP PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);
    typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint* value);
    typedef void (APIENTRYP PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);
    typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint* value);
    typedef void (APIENTRYP PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);
    typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint* value);
    typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC)(GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC)(GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC)(GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC)(GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture, GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture, GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture, GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture, GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);
    typedef void (APIENTRYP PFNGLNORMALP3UIVPROC)(GLenum type, const GLuint* coords);
    typedef void (APIENTRYP PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);
    typedef void (APIENTRYP PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint* color);
    typedef void (APIENTRYP PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);
    typedef void (APIENTRYP PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint* color);
    typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);
    typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type, const GLuint* color);

    GLAPI PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glad_glBindFragDataLocationIndexed;
    GLAPI PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex;
    GLAPI PFNGLGENSAMPLERSPROC glad_glGenSamplers;
    GLAPI PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers;
    GLAPI PFNGLISSAMPLERPROC glad_glIsSampler;
    GLAPI PFNGLBINDSAMPLERPROC glad_glBindSampler;
    GLAPI PFNGLSAMPLERPARAMETERIPROC glad_glSamplerParameteri;
    GLAPI PFNGLSAMPLERPARAMETERIVPROC glad_glSamplerParameteriv;
    GLAPI PFNGLSAMPLERPARAMETERFPROC glad_glSamplerParameterf;
    GLAPI PFNGLSAMPLERPARAMETERFVPROC glad_glSamplerParameterfv;
    GLAPI PFNGLSAMPLERPARAMETERIIVPROC glad_glSamplerParameterIiv;
    GLAPI PFNGLSAMPLERPARAMETERIUIVPROC glad_glSamplerParameterIuiv;
    GLAPI PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv;
    GLAPI PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv;
    GLAPI PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv;
    GLAPI PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv;
    GLAPI PFNGLQUERYCOUNTERPROC glad_glQueryCounter;
    GLAPI PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v;
    GLAPI PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v;
    GLAPI PFNGLVERTEXATTRIBDIVISORPROC glad_glVertexAttribDivisor;
    GLAPI PFNGLVERTEXATTRIBP1UIPROC glad_glVertexAttribP1ui;
    GLAPI PFNGLVERTEXATTRIBP1UIVPROC glad_glVertexAttribP1uiv;
    GLAPI PFNGLVERTEXATTRIBP2UIPROC glad_glVertexAttribP2ui;
    GLAPI PFNGLVERTEXATTRIBP2UIVPROC glad_glVertexAttribP2uiv;
    GLAPI PFNGLVERTEXATTRIBP3UIPROC glad_glVertexAttribP3ui;
    GLAPI PFNGLVERTEXATTRIBP3UIVPROC glad_glVertexAttribP3uiv;
    GLAPI PFNGLVERTEXATTRIBP4UIPROC glad_glVertexAttribP4ui;
    GLAPI PFNGLVERTEXATTRIBP4UIVPROC glad_glVertexAttribP4uiv;
    GLAPI PFNGLVERTEXP2UIPROC glad_glVertexP2ui;
    GLAPI PFNGLVERTEXP2UIVPROC glad_glVertexP2uiv;
    GLAPI PFNGLVERTEXP3UIPROC glad_glVertexP3ui;
    GLAPI PFNGLVERTEXP3UIVPROC glad_glVertexP3uiv;
    GLAPI PFNGLVERTEXP4UIPROC glad_glVertexP4ui;
    GLAPI PFNGLVERTEXP4UIVPROC glad_glVertexP4uiv;
    GLAPI PFNGLTEXCOORDP1UIPROC glad_glTexCoordP1ui;
    GLAPI PFNGLTEXCOORDP1UIVPROC glad_glTexCoordP1uiv;
    GLAPI PFNGLTEXCOORDP2UIPROC glad_glTexCoordP2ui;
    GLAPI PFNGLTEXCOORDP2UIVPROC glad_glTexCoordP2uiv;
    GLAPI PFNGLTEXCOORDP3UIPROC glad_glTexCoordP3ui;
    GLAPI PFNGLTEXCOORDP3UIVPROC glad_glTexCoordP3uiv;
    GLAPI PFNGLTEXCOORDP4UIPROC glad_glTexCoordP4ui;
    GLAPI PFNGLTEXCOORDP4UIVPROC glad_glTexCoordP4uiv;
    GLAPI PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui;
    GLAPI PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv;
    GLAPI PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui;
    GLAPI PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv;
    GLAPI PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui;
    GLAPI PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv;
    GLAPI PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui;
    GLAPI PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv;
    GLAPI PFNGLNORMALP3UIPROC glad_glNormalP3ui;
    GLAPI PFNGLNORMALP3UIVPROC glad_glNormalP3uiv;
    GLAPI PFNGLCOLORP3UIPROC glad_glColorP3ui;
    GLAPI PFNGLCOLORP3UIVPROC glad_glColorP3uiv;
    GLAPI PFNGLCOLORP4UIPROC glad_glColorP4ui;
    GLAPI PFNGLCOLORP4UIVPROC glad_glColorP4uiv;
    GLAPI PFNGLSECONDARYCOLORP3UIPROC glad_glSecondaryColorP3ui;
    GLAPI PFNGLSECONDARYCOLORP3UIVPROC glad_glSecondaryColorP3uiv;

#ifdef __GL_FUNCTION_MACROS__
#define glBindFragDataLocationIndexed glad_glBindFragDataLocationIndexed
#define glGetFragDataIndex glad_glGetFragDataIndex
#define glGenSamplers glad_glGenSamplers
#define glDeleteSamplers glad_glDeleteSamplers
#define glIsSampler glad_glIsSampler
#define glBindSampler glad_glBindSampler
#define glSamplerParameteri glad_glSamplerParameteri
#define glSamplerParameteriv glad_glSamplerParameteriv
#define glSamplerParameterf glad_glSamplerParameterf
#define glSamplerParameterfv glad_glSamplerParameterfv
#define glSamplerParameterIiv glad_glSamplerParameterIiv
#define glSamplerParameterIuiv glad_glSamplerParameterIuiv
#define glGetSamplerParameteriv glad_glGetSamplerParameteriv
#define glGetSamplerParameterIiv glad_glGetSamplerParameterIiv
#define glGetSamplerParameterfv glad_glGetSamplerParameterfv
#define glGetSamplerParameterIuiv glad_glGetSamplerParameterIuiv
#define glQueryCounter glad_glQueryCounter
#define glGetQueryObjecti64v glad_glGetQueryObjecti64v
#define glGetQueryObjectui64v glad_glGetQueryObjectui64v
#define glVertexAttribDivisor glad_glVertexAttribDivisor
#define glVertexAttribP1ui glad_glVertexAttribP1ui
#define glVertexAttribP1uiv glad_glVertexAttribP1uiv
#define glVertexAttribP2ui glad_glVertexAttribP2ui
#define glVertexAttribP2uiv glad_glVertexAttribP2uiv
#define glVertexAttribP3ui glad_glVertexAttribP3ui
#define glVertexAttribP3uiv glad_glVertexAttribP3uiv
#define glVertexAttribP4ui glad_glVertexAttribP4ui
#define glVertexAttribP4uiv glad_glVertexAttribP4uiv
#define glVertexP2ui glad_glVertexP2ui
#define glVertexP2uiv glad_glVertexP2uiv
#define glVertexP3ui glad_glVertexP3ui
#define glVertexP3uiv glad_glVertexP3uiv
#define glVertexP4ui glad_glVertexP4ui
#define glVertexP4uiv glad_glVertexP4uiv
#define glTexCoordP1ui glad_glTexCoordP1ui
#define glTexCoordP1uiv glad_glTexCoordP1uiv
#define glTexCoordP2ui glad_glTexCoordP2ui
#define glTexCoordP2uiv glad_glTexCoordP2uiv
#define glTexCoordP3ui glad_glTexCoordP3ui
#define glTexCoordP3uiv glad_glTexCoordP3uiv
#define glTexCoordP4ui glad_glTexCoordP4ui
#define glTexCoordP4uiv glad_glTexCoordP4uiv
#define glMultiTexCoordP1ui glad_glMultiTexCoordP1ui
#define glMultiTexCoordP1uiv glad_glMultiTexCoordP1uiv
#define glMultiTexCoordP2ui glad_glMultiTexCoordP2ui
#define glMultiTexCoordP2uiv glad_glMultiTexCoordP2uiv
#define glMultiTexCoordP3ui glad_glMultiTexCoordP3ui
#define glMultiTexCoordP3uiv glad_glMultiTexCoordP3uiv
#define glMultiTexCoordP4ui glad_glMultiTexCoordP4ui
#define glMultiTexCoordP4uiv glad_glMultiTexCoordP4uiv
#define glNormalP3ui glad_glNormalP3ui
#define glNormalP3uiv glad_glNormalP3uiv
#define glColorP3ui glad_glColorP3ui
#define glColorP3uiv glad_glColorP3uiv
#define glColorP4ui glad_glColorP4ui
#define glColorP4uiv glad_glColorP4uiv
#define glSecondaryColorP3ui glad_glSecondaryColorP3ui
#define glSecondaryColorP3uiv glad_glSecondaryColorP3uiv
#else
    GLAPI void glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar* name);
    GLAPI GLint glGetFragDataIndex(GLuint program, const GLchar* name);
    GLAPI void glGenSamplers(GLsizei count, GLuint* samplers);
    GLAPI void glDeleteSamplers(GLsizei count, const GLuint* samplers);
    GLAPI GLboolean glIsSampler(GLuint sampler);
    GLAPI void glBindSampler(GLuint unit, GLuint sampler);
    GLAPI void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
    GLAPI void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint* param);
    GLAPI void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
    GLAPI void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat* param);
    GLAPI void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint* param);
    GLAPI void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint* param);
    GLAPI void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint* params);
    GLAPI void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint* params);
    GLAPI void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat* params);
    GLAPI void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint* params);
    GLAPI void glQueryCounter(GLuint id, GLenum target);
    GLAPI void glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64* params);
    GLAPI void glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64* params);
    GLAPI void glVertexAttribDivisor(GLuint index, GLuint divisor);
    GLAPI void glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    GLAPI void glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    GLAPI void glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    GLAPI void glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    GLAPI void glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    GLAPI void glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    GLAPI void glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
    GLAPI void glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint* value);
    GLAPI void glVertexP2ui(GLenum type, GLuint value);
    GLAPI void glVertexP2uiv(GLenum type, const GLuint* value);
    GLAPI void glVertexP3ui(GLenum type, GLuint value);
    GLAPI void glVertexP3uiv(GLenum type, const GLuint* value);
    GLAPI void glVertexP4ui(GLenum type, GLuint value);
    GLAPI void glVertexP4uiv(GLenum type, const GLuint* value);
    GLAPI void glTexCoordP1ui(GLenum type, GLuint coords);
    GLAPI void glTexCoordP1uiv(GLenum type, const GLuint* coords);
    GLAPI void glTexCoordP2ui(GLenum type, GLuint coords);
    GLAPI void glTexCoordP2uiv(GLenum type, const GLuint* coords);
    GLAPI void glTexCoordP3ui(GLenum type, GLuint coords);
    GLAPI void glTexCoordP3uiv(GLenum type, const GLuint* coords);
    GLAPI void glTexCoordP4ui(GLenum type, GLuint coords);
    GLAPI void glTexCoordP4uiv(GLenum type, const GLuint* coords);
    GLAPI void glMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords);
    GLAPI void glMultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint* coords);
    GLAPI void glMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords);
    GLAPI void glMultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint* coords);
    GLAPI void glMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords);
    GLAPI void glMultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint* coords);
    GLAPI void glMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords);
    GLAPI void glMultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint* coords);
    GLAPI void glNormalP3ui(GLenum type, GLuint coords);
    GLAPI void glNormalP3uiv(GLenum type, const GLuint* coords);
    GLAPI void glColorP3ui(GLenum type, GLuint color);
    GLAPI void glColorP3uiv(GLenum type, const GLuint* color);
    GLAPI void glColorP4ui(GLenum type, GLuint color);
    GLAPI void glColorP4uiv(GLenum type, const GLuint* color);
    GLAPI void glSecondaryColorP3ui(GLenum type, GLuint color);
    GLAPI void glSecondaryColorP3uiv(GLenum type, const GLuint* color);
#endif

#endif
#ifndef GL_VERSION_4_0
#define GL_VERSION_4_0 1
    GLAPI int GLAD_GL_VERSION_4_0;

    typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
    typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
    typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    typedef void (APIENTRYP PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
    typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect);
    typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void *indirect);
    typedef void (APIENTRYP PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);
    typedef void (APIENTRYP PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);
    typedef void (APIENTRYP PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);
    typedef void (APIENTRYP PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    typedef void (APIENTRYP PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble *params);
    typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar *name);
    typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar *name);
    typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
    typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
    typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
    typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint *indices);
    typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint *params);
    typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
    typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
    typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat *values);
    typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
    typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint *ids);
    typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);
    typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
    typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
    typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
    typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);
    typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);
    typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);
    typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);
    typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint *params);

    GLAPI PFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading;
    GLAPI PFNGLBLENDEQUATIONIPROC glad_glBlendEquationi;
    GLAPI PFNGLBLENDEQUATIONSEPARATEIPROC glad_glBlendEquationSeparatei;
    GLAPI PFNGLBLENDFUNCIPROC glad_glBlendFunci;
    GLAPI PFNGLBLENDFUNCSEPARATEIPROC glad_glBlendFuncSeparatei;
    GLAPI PFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect;
    GLAPI PFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect;
    GLAPI PFNGLUNIFORM1DPROC glad_glUniform1d;
    GLAPI PFNGLUNIFORM2DPROC glad_glUniform2d;
    GLAPI PFNGLUNIFORM3DPROC glad_glUniform3d;
    GLAPI PFNGLUNIFORM4DPROC glad_glUniform4d;
    GLAPI PFNGLUNIFORM1DVPROC glad_glUniform1dv;
    GLAPI PFNGLUNIFORM2DVPROC glad_glUniform2dv;
    GLAPI PFNGLUNIFORM3DVPROC glad_glUniform3dv;
    GLAPI PFNGLUNIFORM4DVPROC glad_glUniform4dv;
    GLAPI PFNGLUNIFORMMATRIX2DVPROC glad_glUniformMatrix2dv;
    GLAPI PFNGLUNIFORMMATRIX3DVPROC glad_glUniformMatrix3dv;
    GLAPI PFNGLUNIFORMMATRIX4DVPROC glad_glUniformMatrix4dv;
    GLAPI PFNGLUNIFORMMATRIX2X3DVPROC glad_glUniformMatrix2x3dv;
    GLAPI PFNGLUNIFORMMATRIX2X4DVPROC glad_glUniformMatrix2x4dv;
    GLAPI PFNGLUNIFORMMATRIX3X2DVPROC glad_glUniformMatrix3x2dv;
    GLAPI PFNGLUNIFORMMATRIX3X4DVPROC glad_glUniformMatrix3x4dv;
    GLAPI PFNGLUNIFORMMATRIX4X2DVPROC glad_glUniformMatrix4x2dv;
    GLAPI PFNGLUNIFORMMATRIX4X3DVPROC glad_glUniformMatrix4x3dv;
    GLAPI PFNGLGETUNIFORMDVPROC glad_glGetUniformdv;
    GLAPI PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation;
    GLAPI PFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex;
    GLAPI PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv;
    GLAPI PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName;
    GLAPI PFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName;
    GLAPI PFNGLUNIFORMSUBROUTINESUIVPROC glad_glUniformSubroutinesuiv;
    GLAPI PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv;
    GLAPI PFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv;
    GLAPI PFNGLPATCHPARAMETERIPROC glad_glPatchParameteri;
    GLAPI PFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv;
    GLAPI PFNGLBINDTRANSFORMFEEDBACKPROC glad_glBindTransformFeedback;
    GLAPI PFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks;
    GLAPI PFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks;
    GLAPI PFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback;
    GLAPI PFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback;
    GLAPI PFNGLRESUMETRANSFORMFEEDBACKPROC glad_glResumeTransformFeedback;
    GLAPI PFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback;
    GLAPI PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream;
    GLAPI PFNGLBEGINQUERYINDEXEDPROC glad_glBeginQueryIndexed;
    GLAPI PFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed;
    GLAPI PFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv;

#ifdef __GL_FUNCTION_MACROS__
#define glMinSampleShading glad_glMinSampleShading
#define glBlendEquationi glad_glBlendEquationi
#define glBlendEquationSeparatei glad_glBlendEquationSeparatei
#define glBlendFunci glad_glBlendFunci
#define glBlendFuncSeparatei glad_glBlendFuncSeparatei
#define glDrawArraysIndirect glad_glDrawArraysIndirect
#define glDrawElementsIndirect glad_glDrawElementsIndirect
#define glUniform1d glad_glUniform1d
#define glUniform2d glad_glUniform2d
#define glUniform3d glad_glUniform3d
#define glUniform4d glad_glUniform4d
#define glUniform1dv glad_glUniform1dv
#define glUniform2dv glad_glUniform2dv
#define glUniform3dv glad_glUniform3dv
#define glUniform4dv glad_glUniform4dv
#define glUniformMatrix2dv glad_glUniformMatrix2dv
#define glUniformMatrix3dv glad_glUniformMatrix3dv
#define glUniformMatrix4dv glad_glUniformMatrix4dv
#define glUniformMatrix2x3dv glad_glUniformMatrix2x3dv
#define glUniformMatrix2x4dv glad_glUniformMatrix2x4dv
#define glUniformMatrix3x2dv glad_glUniformMatrix3x2dv
#define glUniformMatrix3x4dv glad_glUniformMatrix3x4dv
#define glUniformMatrix4x2dv glad_glUniformMatrix4x2dv
#define glUniformMatrix4x3dv glad_glUniformMatrix4x3dv
#define glGetUniformdv glad_glGetUniformdv
#define glGetSubroutineUniformLocation glad_glGetSubroutineUniformLocation
#define glGetSubroutineIndex glad_glGetSubroutineIndex
#define glGetActiveSubroutineUniformiv glad_glGetActiveSubroutineUniformiv
#define glGetActiveSubroutineUniformName glad_glGetActiveSubroutineUniformName
#define glGetActiveSubroutineName glad_glGetActiveSubroutineName
#define glUniformSubroutinesuiv glad_glUniformSubroutinesuiv
#define glGetUniformSubroutineuiv glad_glGetUniformSubroutineuiv
#define glGetProgramStageiv glad_glGetProgramStageiv
#define glPatchParameteri glad_glPatchParameteri
#define glPatchParameterfv glad_glPatchParameterfv
#define glBindTransformFeedback glad_glBindTransformFeedback
#define glDeleteTransformFeedbacks glad_glDeleteTransformFeedbacks
#define glGenTransformFeedbacks glad_glGenTransformFeedbacks
#define glIsTransformFeedback glad_glIsTransformFeedback
#define glPauseTransformFeedback glad_glPauseTransformFeedback
#define glResumeTransformFeedback glad_glResumeTransformFeedback
#define glDrawTransformFeedback glad_glDrawTransformFeedback
#define glDrawTransformFeedbackStream glad_glDrawTransformFeedbackStream
#define glBeginQueryIndexed glad_glBeginQueryIndexed
#define glEndQueryIndexed glad_glEndQueryIndexed
#define glGetQueryIndexediv glad_glGetQueryIndexediv
#else
    GLAPI void glMinSampleShading(GLfloat value);
    GLAPI void glBlendEquationi(GLuint buf, GLenum mode);
    GLAPI void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
    GLAPI void glBlendFunci(GLuint buf, GLenum src, GLenum dst);
    GLAPI void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
    GLAPI void glDrawArraysIndirect(GLenum mode, const void *indirect);
    GLAPI void glDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect);
    GLAPI void glUniform1d(GLint location, GLdouble x);
    GLAPI void glUniform2d(GLint location, GLdouble x, GLdouble y);
    GLAPI void glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z);
    GLAPI void glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    GLAPI void glUniform1dv(GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glUniform2dv(GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glUniform3dv(GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glUniform4dv(GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glGetUniformdv(GLuint program, GLint location, GLdouble *params);
    GLAPI GLint glGetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar *name);
    GLAPI GLuint glGetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar *name);
    GLAPI void glGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
    GLAPI void glGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
    GLAPI void glGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
    GLAPI void glUniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint *indices);
    GLAPI void glGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint *params);
    GLAPI void glGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
    GLAPI void glPatchParameteri(GLenum pname, GLint value);
    GLAPI void glPatchParameterfv(GLenum pname, const GLfloat *values);
    GLAPI void glBindTransformFeedback(GLenum target, GLuint id);
    GLAPI void glDeleteTransformFeedbacks(GLsizei n, const GLuint *ids);
    GLAPI void glGenTransformFeedbacks(GLsizei n, GLuint *ids);
    GLAPI GLboolean glIsTransformFeedback(GLuint id);
    GLAPI void glPauseTransformFeedback(void);
    GLAPI void glResumeTransformFeedback(void);
    GLAPI void glDrawTransformFeedback(GLenum mode, GLuint id);
    GLAPI void glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream);
    GLAPI void glBeginQueryIndexed(GLenum target, GLuint index, GLuint id);
    GLAPI void glEndQueryIndexed(GLenum target, GLuint index);
    GLAPI void glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint *params);
#endif
#endif
#ifndef GL_VERSION_4_1
#define GL_VERSION_4_1 1
    GLAPI int GLAD_GL_VERSION_4_1;

    typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC)(void);
    typedef void (APIENTRYP PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
    typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
    typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
    typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC)(GLfloat d);
    typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
    typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
    typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
    typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
    typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
    typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const*strings);
    typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
    typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint *pipelines);
    typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);
    typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
    typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
    typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble *v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble *v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble *v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble *v);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
    typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble *params);
    typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat *v);
    typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
    typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat *v);
    typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint *v);
    typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint *v);
    typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble *v);
    typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);
    typedef void (APIENTRYP PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat *data);
    typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble *data);

    GLAPI PFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler;
    GLAPI PFNGLSHADERBINARYPROC glad_glShaderBinary;
    GLAPI PFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat;
    GLAPI PFNGLDEPTHRANGEFPROC glad_glDepthRangef;
    GLAPI PFNGLCLEARDEPTHFPROC glad_glClearDepthf;
    GLAPI PFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary;
    GLAPI PFNGLPROGRAMBINARYPROC glad_glProgramBinary;
    GLAPI PFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri;
    GLAPI PFNGLUSEPROGRAMSTAGESPROC glad_glUseProgramStages;
    GLAPI PFNGLACTIVESHADERPROGRAMPROC glad_glActiveShaderProgram;
    GLAPI PFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv;
    GLAPI PFNGLBINDPROGRAMPIPELINEPROC glad_glBindProgramPipeline;
    GLAPI PFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines;
    GLAPI PFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines;
    GLAPI PFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline;
    GLAPI PFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv;
    GLAPI PFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i;
    GLAPI PFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv;
    GLAPI PFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f;
    GLAPI PFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv;
    GLAPI PFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d;
    GLAPI PFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv;
    GLAPI PFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui;
    GLAPI PFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv;
    GLAPI PFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i;
    GLAPI PFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv;
    GLAPI PFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f;
    GLAPI PFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv;
    GLAPI PFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d;
    GLAPI PFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv;
    GLAPI PFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui;
    GLAPI PFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv;
    GLAPI PFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i;
    GLAPI PFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv;
    GLAPI PFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f;
    GLAPI PFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv;
    GLAPI PFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d;
    GLAPI PFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv;
    GLAPI PFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui;
    GLAPI PFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv;
    GLAPI PFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i;
    GLAPI PFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv;
    GLAPI PFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f;
    GLAPI PFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv;
    GLAPI PFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d;
    GLAPI PFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv;
    GLAPI PFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui;
    GLAPI PFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv;
    GLAPI PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv;
    GLAPI PFNGLVALIDATEPROGRAMPIPELINEPROC glad_glValidateProgramPipeline;
    GLAPI PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog;
    GLAPI PFNGLVERTEXATTRIBL1DPROC glad_glVertexAttribL1d;
    GLAPI PFNGLVERTEXATTRIBL2DPROC glad_glVertexAttribL2d;
    GLAPI PFNGLVERTEXATTRIBL3DPROC glad_glVertexAttribL3d;
    GLAPI PFNGLVERTEXATTRIBL4DPROC glad_glVertexAttribL4d;
    GLAPI PFNGLVERTEXATTRIBL1DVPROC glad_glVertexAttribL1dv;
    GLAPI PFNGLVERTEXATTRIBL2DVPROC glad_glVertexAttribL2dv;
    GLAPI PFNGLVERTEXATTRIBL3DVPROC glad_glVertexAttribL3dv;
    GLAPI PFNGLVERTEXATTRIBL4DVPROC glad_glVertexAttribL4dv;
    GLAPI PFNGLVERTEXATTRIBLPOINTERPROC glad_glVertexAttribLPointer;
    GLAPI PFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv;
    GLAPI PFNGLVIEWPORTARRAYVPROC glad_glViewportArrayv;
    GLAPI PFNGLVIEWPORTINDEXEDFPROC glad_glViewportIndexedf;
    GLAPI PFNGLVIEWPORTINDEXEDFVPROC glad_glViewportIndexedfv;
    GLAPI PFNGLSCISSORARRAYVPROC glad_glScissorArrayv;
    GLAPI PFNGLSCISSORINDEXEDPROC glad_glScissorIndexed;
    GLAPI PFNGLSCISSORINDEXEDVPROC glad_glScissorIndexedv;
    GLAPI PFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv;
    GLAPI PFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed;
    GLAPI PFNGLGETFLOATI_VPROC glad_glGetFloati_v;
    GLAPI PFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v;

#ifdef __GL_FUNCTION_MACROS__
#define glReleaseShaderCompiler glad_glReleaseShaderCompiler
#define glShaderBinary glad_glShaderBinary
#define glGetShaderPrecisionFormat glad_glGetShaderPrecisionFormat
#define glDepthRangef glad_glDepthRangef
#define glClearDepthf glad_glClearDepthf
#define glGetProgramBinary glad_glGetProgramBinary
#define glProgramBinary glad_glProgramBinary
#define glProgramParameteri glad_glProgramParameteri
#define glUseProgramStages glad_glUseProgramStages
#define glActiveShaderProgram glad_glActiveShaderProgram
#define glCreateShaderProgramv glad_glCreateShaderProgramv
#define glBindProgramPipeline glad_glBindProgramPipeline
#define glDeleteProgramPipelines glad_glDeleteProgramPipelines
#define glGenProgramPipelines glad_glGenProgramPipelines
#define glIsProgramPipeline glad_glIsProgramPipeline
#define glGetProgramPipelineiv glad_glGetProgramPipelineiv
#define glProgramUniform1i glad_glProgramUniform1i
#define glProgramUniform1iv glad_glProgramUniform1iv
#define glProgramUniform1f glad_glProgramUniform1f
#define glProgramUniform1fv glad_glProgramUniform1fv
#define glProgramUniform1d glad_glProgramUniform1d
#define glProgramUniform1dv glad_glProgramUniform1dv
#define glProgramUniform1ui glad_glProgramUniform1ui
#define glProgramUniform1uiv glad_glProgramUniform1uiv
#define glProgramUniform2i glad_glProgramUniform2i
#define glProgramUniform2iv glad_glProgramUniform2iv
#define glProgramUniform2f glad_glProgramUniform2f
#define glProgramUniform2fv glad_glProgramUniform2fv
#define glProgramUniform2d glad_glProgramUniform2d
#define glProgramUniform2dv glad_glProgramUniform2dv
#define glProgramUniform2ui glad_glProgramUniform2ui
#define glProgramUniform2uiv glad_glProgramUniform2uiv
#define glProgramUniform3i glad_glProgramUniform3i
#define glProgramUniform3iv glad_glProgramUniform3iv
#define glProgramUniform3f glad_glProgramUniform3f
#define glProgramUniform3fv glad_glProgramUniform3fv
#define glProgramUniform3d glad_glProgramUniform3d
#define glProgramUniform3dv glad_glProgramUniform3dv
#define glProgramUniform3ui glad_glProgramUniform3ui
#define glProgramUniform3uiv glad_glProgramUniform3uiv
#define glProgramUniform4i glad_glProgramUniform4i
#define glProgramUniform4iv glad_glProgramUniform4iv
#define glProgramUniform4f glad_glProgramUniform4f
#define glProgramUniform4fv glad_glProgramUniform4fv
#define glProgramUniform4d glad_glProgramUniform4d
#define glProgramUniform4dv glad_glProgramUniform4dv
#define glProgramUniform4ui glad_glProgramUniform4ui
#define glProgramUniform4uiv glad_glProgramUniform4uiv
#define glProgramUniformMatrix2fv glad_glProgramUniformMatrix2fv
#define glProgramUniformMatrix3fv glad_glProgramUniformMatrix3fv
#define glProgramUniformMatrix4fv glad_glProgramUniformMatrix4fv
#define glProgramUniformMatrix2dv glad_glProgramUniformMatrix2dv
#define glProgramUniformMatrix3dv glad_glProgramUniformMatrix3dv
#define glProgramUniformMatrix4dv glad_glProgramUniformMatrix4dv
#define glProgramUniformMatrix2x3fv glad_glProgramUniformMatrix2x3fv
#define glProgramUniformMatrix3x2fv glad_glProgramUniformMatrix3x2fv
#define glProgramUniformMatrix2x4fv glad_glProgramUniformMatrix2x4fv
#define glProgramUniformMatrix4x2fv glad_glProgramUniformMatrix4x2fv
#define glProgramUniformMatrix3x4fv glad_glProgramUniformMatrix3x4fv
#define glProgramUniformMatrix4x3fv glad_glProgramUniformMatrix4x3fv
#define glProgramUniformMatrix2x3dv glad_glProgramUniformMatrix2x3dv
#define glProgramUniformMatrix3x2dv glad_glProgramUniformMatrix3x2dv
#define glProgramUniformMatrix2x4dv glad_glProgramUniformMatrix2x4dv
#define glProgramUniformMatrix4x2dv glad_glProgramUniformMatrix4x2dv
#define glProgramUniformMatrix3x4dv glad_glProgramUniformMatrix3x4dv
#define glProgramUniformMatrix4x3dv glad_glProgramUniformMatrix4x3dv
#define glValidateProgramPipeline glad_glValidateProgramPipeline
#define glGetProgramPipelineInfoLog glad_glGetProgramPipelineInfoLog
#define glVertexAttribL1d glad_glVertexAttribL1d
#define glVertexAttribL2d glad_glVertexAttribL2d
#define glVertexAttribL3d glad_glVertexAttribL3d
#define glVertexAttribL4d glad_glVertexAttribL4d
#define glVertexAttribL1dv glad_glVertexAttribL1dv
#define glVertexAttribL2dv glad_glVertexAttribL2dv
#define glVertexAttribL3dv glad_glVertexAttribL3dv
#define glVertexAttribL4dv glad_glVertexAttribL4dv
#define glVertexAttribLPointer glad_glVertexAttribLPointer
#define glGetVertexAttribLdv glad_glGetVertexAttribLdv
#define glViewportArrayv glad_glViewportArrayv
#define glViewportIndexedf glad_glViewportIndexedf
#define glViewportIndexedfv glad_glViewportIndexedfv
#define glScissorArrayv glad_glScissorArrayv
#define glScissorIndexed glad_glScissorIndexed
#define glScissorIndexedv glad_glScissorIndexedv
#define glDepthRangeArrayv glad_glDepthRangeArrayv
#define glDepthRangeIndexed glad_glDepthRangeIndexed
#define glGetFloati_v glad_glGetFloati_v
#define glGetDoublei_v glad_glGetDoublei_v
#else
    GLAPI void glReleaseShaderCompiler(void);
    GLAPI void glShaderBinary(GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
    GLAPI void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
    GLAPI void glDepthRangef(GLfloat n, GLfloat f);
    GLAPI void glClearDepthf(GLfloat d);
    GLAPI void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
    GLAPI void glProgramBinary(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
    GLAPI void glProgramParameteri(GLuint program, GLenum pname, GLint value);
    GLAPI void glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
    GLAPI void glActiveShaderProgram(GLuint pipeline, GLuint program);
    GLAPI GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const*strings);
    GLAPI void glBindProgramPipeline(GLuint pipeline);
    GLAPI void glDeleteProgramPipelines(GLsizei n, const GLuint *pipelines);
    GLAPI void glGenProgramPipelines(GLsizei n, GLuint *pipelines);
    GLAPI GLboolean glIsProgramPipeline(GLuint pipeline);
    GLAPI void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params);
    GLAPI void glProgramUniform1i(GLuint program, GLint location, GLint v0);
    GLAPI void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint *value);
    GLAPI void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
    GLAPI void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    GLAPI void glProgramUniform1d(GLuint program, GLint location, GLdouble v0);
    GLAPI void glProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
    GLAPI void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
    GLAPI void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
    GLAPI void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint *value);
    GLAPI void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
    GLAPI void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    GLAPI void glProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1);
    GLAPI void glProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
    GLAPI void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
    GLAPI void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
    GLAPI void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint *value);
    GLAPI void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
    GLAPI void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    GLAPI void glProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
    GLAPI void glProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
    GLAPI void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
    GLAPI void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
    GLAPI void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint *value);
    GLAPI void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
    GLAPI void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
    GLAPI void glProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
    GLAPI void glProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
    GLAPI void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
    GLAPI void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
    GLAPI void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
    GLAPI void glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
    GLAPI void glValidateProgramPipeline(GLuint pipeline);
    GLAPI void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
    GLAPI void glVertexAttribL1d(GLuint index, GLdouble x);
    GLAPI void glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y);
    GLAPI void glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
    GLAPI void glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
    GLAPI void glVertexAttribL1dv(GLuint index, const GLdouble *v);
    GLAPI void glVertexAttribL2dv(GLuint index, const GLdouble *v);
    GLAPI void glVertexAttribL3dv(GLuint index, const GLdouble *v);
    GLAPI void glVertexAttribL4dv(GLuint index, const GLdouble *v);
    GLAPI void glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
    GLAPI void glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble *params);
    GLAPI void glViewportArrayv(GLuint first, GLsizei count, const GLfloat *v);
    GLAPI void glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
    GLAPI void glViewportIndexedfv(GLuint index, const GLfloat *v);
    GLAPI void glScissorArrayv(GLuint first, GLsizei count, const GLint *v);
    GLAPI void glScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
    GLAPI void glScissorIndexedv(GLuint index, const GLint *v);
    GLAPI void glDepthRangeArrayv(GLuint first, GLsizei count, const GLdouble *v);
    GLAPI void glDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f);
    GLAPI void glGetFloati_v(GLenum target, GLuint index, GLfloat *data);
    GLAPI void glGetDoublei_v(GLenum target, GLuint index, GLdouble *data);
#endif
#endif
#ifndef GL_VERSION_4_2
#define GL_VERSION_4_2 1
    GLAPI int GLAD_GL_VERSION_4_2;

    typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
    typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
    typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
    typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
    typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
    typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
    typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);
    typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);

    GLAPI PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_glDrawArraysInstancedBaseInstance;
    GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_glDrawElementsInstancedBaseInstance;
    GLAPI PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_glDrawElementsInstancedBaseVertexBaseInstance;
    GLAPI PFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ;
    GLAPI PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv;
    GLAPI PFNGLBINDIMAGETEXTUREPROC glad_glBindImageTexture;
    GLAPI PFNGLMEMORYBARRIERPROC glad_glMemoryBarrier;
    GLAPI PFNGLTEXSTORAGE1DPROC glad_glTexStorage1D;
    GLAPI PFNGLTEXSTORAGE2DPROC glad_glTexStorage2D;
    GLAPI PFNGLTEXSTORAGE3DPROC glad_glTexStorage3D;
    GLAPI PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced;
    GLAPI PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_glDrawTransformFeedbackStreamInstanced;
#ifdef __GL_FUNCTION_MACROS__
#define glDrawArraysInstancedBaseInstance glad_glDrawArraysInstancedBaseInstance
#define glDrawElementsInstancedBaseInstance glad_glDrawElementsInstancedBaseInstance
#define glDrawElementsInstancedBaseVertexBaseInstance glad_glDrawElementsInstancedBaseVertexBaseInstance
#define glGetInternalformativ glad_glGetInternalformativ
#define glGetActiveAtomicCounterBufferiv glad_glGetActiveAtomicCounterBufferiv
#define glBindImageTexture glad_glBindImageTexture
#define glMemoryBarrier glad_glMemoryBarrier
#define glTexStorage1D glad_glTexStorage1D
#define glTexStorage2D glad_glTexStorage2D
#define glTexStorage3D glad_glTexStorage3D
#define glDrawTransformFeedbackInstanced glad_glDrawTransformFeedbackInstanced
#define glDrawTransformFeedbackStreamInstanced glad_glDrawTransformFeedbackStreamInstanced
#else
    GLAPI void glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
    GLAPI void glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
    GLAPI void glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
    GLAPI void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
    GLAPI void glGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
    GLAPI void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
    GLAPI void glMemoryBarrier(GLbitfield barriers);
    GLAPI void glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
    GLAPI void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    GLAPI void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    GLAPI void glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount);
    GLAPI void glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
#endif
#endif
#ifndef GL_VERSION_4_3
#define GL_VERSION_4_3 1
    GLAPI int GLAD_GL_VERSION_4_3;

    typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
    typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
    typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
    typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
    typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
    typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
    typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
    typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);
    typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
    typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
    typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments);
    typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
    typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
    typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
    typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar *name);
    typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
    typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
    typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar *name);
    typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar *name);
    typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
    typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
    typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
    typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
    typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
    typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
    typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void *userParam);
    typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
    typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar *message);
    typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC)(void);
    typedef void (APIENTRYP PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
    typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
    typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC)(const void *ptr, GLsizei length, const GLchar *label);
    typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
    typedef void (APIENTRYP PFNGLGETPOINTERVPROC)(GLenum pname, void **params);

    GLAPI PFNGLCLEARBUFFERDATAPROC glad_glClearBufferData;
    GLAPI PFNGLCLEARBUFFERSUBDATAPROC glad_glClearBufferSubData;
    GLAPI PFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute;
    GLAPI PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect;
    GLAPI PFNGLCOPYIMAGESUBDATAPROC glad_glCopyImageSubData;
    GLAPI PFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri;
    GLAPI PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv;
    GLAPI PFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v;
    GLAPI PFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage;
    GLAPI PFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage;
    GLAPI PFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData;
    GLAPI PFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData;
    GLAPI PFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer;
    GLAPI PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer;
    GLAPI PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect;
    GLAPI PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect;
    GLAPI PFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv;
    GLAPI PFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex;
    GLAPI PFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName;
    GLAPI PFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv;
    GLAPI PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation;
    GLAPI PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_glGetProgramResourceLocationIndex;
    GLAPI PFNGLSHADERSTORAGEBLOCKBINDINGPROC glad_glShaderStorageBlockBinding;
    GLAPI PFNGLTEXBUFFERRANGEPROC glad_glTexBufferRange;
    GLAPI PFNGLTEXSTORAGE2DMULTISAMPLEPROC glad_glTexStorage2DMultisample;
    GLAPI PFNGLTEXSTORAGE3DMULTISAMPLEPROC glad_glTexStorage3DMultisample;
    GLAPI PFNGLTEXTUREVIEWPROC glad_glTextureView;
    GLAPI PFNGLBINDVERTEXBUFFERPROC glad_glBindVertexBuffer;
    GLAPI PFNGLVERTEXATTRIBFORMATPROC glad_glVertexAttribFormat;
    GLAPI PFNGLVERTEXATTRIBIFORMATPROC glad_glVertexAttribIFormat;
    GLAPI PFNGLVERTEXATTRIBLFORMATPROC glad_glVertexAttribLFormat;
    GLAPI PFNGLVERTEXATTRIBBINDINGPROC glad_glVertexAttribBinding;
    GLAPI PFNGLVERTEXBINDINGDIVISORPROC glad_glVertexBindingDivisor;
    GLAPI PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl;
    GLAPI PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert;
    GLAPI PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback;
    GLAPI PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog;
    GLAPI PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup;
    GLAPI PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup;
    GLAPI PFNGLOBJECTLABELPROC glad_glObjectLabel;
    GLAPI PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel;
    GLAPI PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel;
    GLAPI PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel;
    GLAPI PFNGLGETPOINTERVPROC glad_glGetPointerv;

#ifdef __GL_FUNCTION_MACROS__
#define glClearBufferData glad_glClearBufferData
#define glClearBufferSubData glad_glClearBufferSubData
#define glDispatchCompute glad_glDispatchCompute
#define glDispatchComputeIndirect glad_glDispatchComputeIndirect
#define glCopyImageSubData glad_glCopyImageSubData
#define glFramebufferParameteri glad_glFramebufferParameteri
#define glGetFramebufferParameteriv glad_glGetFramebufferParameteriv
#define glGetInternalformati64v glad_glGetInternalformati64v
#define glInvalidateTexSubImage glad_glInvalidateTexSubImage
#define glInvalidateTexImage glad_glInvalidateTexImage
#define glInvalidateBufferSubData glad_glInvalidateBufferSubData
#define glInvalidateBufferData glad_glInvalidateBufferData
#define glInvalidateFramebuffer glad_glInvalidateFramebuffer
#define glInvalidateSubFramebuffer glad_glInvalidateSubFramebuffer
#define glMultiDrawArraysIndirect glad_glMultiDrawArraysIndirect
#define glMultiDrawElementsIndirect glad_glMultiDrawElementsIndirect
#define glGetProgramInterfaceiv glad_glGetProgramInterfaceiv
#define glGetProgramResourceIndex glad_glGetProgramResourceIndex
#define glGetProgramResourceName glad_glGetProgramResourceName
#define glGetProgramResourceiv glad_glGetProgramResourceiv
#define glGetProgramResourceLocation glad_glGetProgramResourceLocation
#define glGetProgramResourceLocationIndex glad_glGetProgramResourceLocationIndex
#define glShaderStorageBlockBinding glad_glShaderStorageBlockBinding
#define glTexBufferRange glad_glTexBufferRange
#define glTexStorage2DMultisample glad_glTexStorage2DMultisample
#define glTexStorage3DMultisample glad_glTexStorage3DMultisample
#define glTextureView glad_glTextureView
#define glBindVertexBuffer glad_glBindVertexBuffer
#define glVertexAttribFormat glad_glVertexAttribFormat
#define glVertexAttribIFormat glad_glVertexAttribIFormat
#define glVertexAttribLFormat glad_glVertexAttribLFormat
#define glVertexAttribBinding glad_glVertexAttribBinding
#define glVertexBindingDivisor glad_glVertexBindingDivisor
#define glDebugMessageControl glad_glDebugMessageControl
#define glDebugMessageInsert glad_glDebugMessageInsert
#define glDebugMessageCallback glad_glDebugMessageCallback
#define glGetDebugMessageLog glad_glGetDebugMessageLog
#define glPushDebugGroup glad_glPushDebugGroup
#define glPopDebugGroup glad_glPopDebugGroup
#define glObjectLabel glad_glObjectLabel
#define glGetObjectLabel glad_glGetObjectLabel
#define glObjectPtrLabel glad_glObjectPtrLabel
#define glGetObjectPtrLabel glad_glGetObjectPtrLabel
#define glGetPointerv glad_glGetPointerv
#else
    GLAPI void glClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
    GLAPI void glClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
    GLAPI void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
    GLAPI void glDispatchComputeIndirect(GLintptr indirect);
    GLAPI void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
    GLAPI void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
    GLAPI void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint *params);
    GLAPI void glGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
    GLAPI void glInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
    GLAPI void glInvalidateTexImage(GLuint texture, GLint level);
    GLAPI void glInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length);
    GLAPI void glInvalidateBufferData(GLuint buffer);
    GLAPI void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments);
    GLAPI void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    GLAPI void glMultiDrawArraysIndirect(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
    GLAPI void glMultiDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
    GLAPI void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
    GLAPI GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar *name);
    GLAPI void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
    GLAPI void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
    GLAPI GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar *name);
    GLAPI GLint glGetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar *name);
    GLAPI void glShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
    GLAPI void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    GLAPI void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    GLAPI void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    GLAPI void glTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
    GLAPI void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    GLAPI void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    GLAPI void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    GLAPI void glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    GLAPI void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
    GLAPI void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
    GLAPI void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
    GLAPI void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
    GLAPI void glDebugMessageCallback(GLDEBUGPROC callback, const void *userParam);
    GLAPI GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
    GLAPI void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar *message);
    GLAPI void glPopDebugGroup(void);
    GLAPI void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
    GLAPI void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
    GLAPI void glObjectPtrLabel(const void *ptr, GLsizei length, const GLchar *label);
    GLAPI void glGetObjectPtrLabel(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
    GLAPI void glGetPointerv(GLenum pname, void **params);
#endif
#endif
#ifndef GL_VERSION_4_4
#define GL_VERSION_4_4 1
    GLAPI int GLAD_GL_VERSION_4_4;

    typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
    typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
    typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
    typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
    typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
    typedef void (APIENTRYP PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count, const GLuint *textures);
    typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count, const GLuint *samplers);
    typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count, const GLuint *textures);
    typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);

    GLAPI PFNGLBUFFERSTORAGEPROC glad_glBufferStorage;
    GLAPI PFNGLCLEARTEXIMAGEPROC glad_glClearTexImage;
    GLAPI PFNGLCLEARTEXSUBIMAGEPROC glad_glClearTexSubImage;
    GLAPI PFNGLBINDBUFFERSBASEPROC glad_glBindBuffersBase;
    GLAPI PFNGLBINDBUFFERSRANGEPROC glad_glBindBuffersRange;
    GLAPI PFNGLBINDTEXTURESPROC glad_glBindTextures;
    GLAPI PFNGLBINDSAMPLERSPROC glad_glBindSamplers;
    GLAPI PFNGLBINDIMAGETEXTURESPROC glad_glBindImageTextures;
    GLAPI PFNGLBINDVERTEXBUFFERSPROC glad_glBindVertexBuffers;

#ifdef __GL_FUNCTION_MACROS__
#define glBufferStorage glad_glBufferStorage
#define glClearTexImage glad_glClearTexImage
#define glClearTexSubImage glad_glClearTexSubImage
#define glBindBuffersBase glad_glBindBuffersBase
#define glBindBuffersRange glad_glBindBuffersRange
#define glBindTextures glad_glBindTextures
#define glBindSamplers glad_glBindSamplers
#define glBindImageTextures glad_glBindImageTextures
#define glBindVertexBuffers glad_glBindVertexBuffers
#else
    GLAPI void glBufferStorage(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
    GLAPI void glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
    GLAPI void glClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
    GLAPI void glBindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
    GLAPI void glBindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
    GLAPI void glBindTextures(GLuint first, GLsizei count, const GLuint *textures);
    GLAPI void glBindSamplers(GLuint first, GLsizei count, const GLuint *samplers);
    GLAPI void glBindImageTextures(GLuint first, GLsizei count, const GLuint *textures);
    GLAPI void glBindVertexBuffers(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
#endif
#endif
#ifndef GL_VERSION_4_5
#define GL_VERSION_4_5 1
    GLAPI int GLAD_GL_VERSION_4_5;

    typedef void (APIENTRYP PFNGLCLIPCONTROLPROC)(GLenum origin, GLenum depth);
    typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);
    typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb, GLuint index, GLuint buffer);
    typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb, GLenum pname, GLint *param);
    typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint *param);
    typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
    typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint *buffers);
    typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
    typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
    typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
    typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
    typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
    typedef void* (APIENTRYP PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);
    typedef void* (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
    typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);
    typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
    typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer, GLenum pname, GLint64 *params);
    typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer, GLenum pname, void **params);
    typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
    typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);
    typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer, GLenum pname, GLint param);
    typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
    typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
    typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer, GLenum buf);
    typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer, GLsizei n, const GLenum *bufs);
    typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer, GLenum src);
    typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
    typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
    typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
    typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
    typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer, GLenum target);
    typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer, GLenum pname, GLint *param);
    typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);
    typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n, GLuint *textures);
    typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC)(GLuint texture, GLenum internalformat, GLuint buffer);
    typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
    typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
    typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
    typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
    typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
    typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC)(GLuint texture, GLenum pname, GLfloat param);
    typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, const GLfloat *param);
    typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC)(GLuint texture, GLenum pname, GLint param);
    typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, const GLint *params);
    typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, const GLuint *params);
    typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, const GLint *param);
    typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);
    typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);
    typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
    typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture, GLint level, GLenum pname, GLfloat *params);
    typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture, GLint level, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, GLfloat *params);
    typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, GLuint *params);
    typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, GLint *params);
    typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);
    typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
    typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
    typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj, GLuint buffer);
    typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
    typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
    typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
    typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname, GLint *param);
    typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
    typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
    typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint *samplers);
    typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);
    typedef void (APIENTRYP PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n, GLuint *ids);
    typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
    typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
    typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC)(void);
    typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
    typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
    typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
    typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint *params);
    typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
    typedef void (APIENTRYP PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
    typedef void (APIENTRYP PFNGLGETNMAPDVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
    typedef void (APIENTRYP PFNGLGETNMAPFVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
    typedef void (APIENTRYP PFNGLGETNMAPIVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
    typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC)(GLenum map, GLsizei bufSize, GLfloat *values);
    typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC)(GLenum map, GLsizei bufSize, GLuint *values);
    typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC)(GLenum map, GLsizei bufSize, GLushort *values);
    typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC)(GLsizei bufSize, GLubyte *pattern);
    typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
    typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
    typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
    typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    typedef void (APIENTRYP PFNGLGETNMINMAXPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC)(void);

    GLAPI PFNGLCLIPCONTROLPROC glad_glClipControl;
    GLAPI PFNGLCREATETRANSFORMFEEDBACKSPROC glad_glCreateTransformFeedbacks;
    GLAPI PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC glad_glTransformFeedbackBufferBase;
    GLAPI PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC glad_glTransformFeedbackBufferRange;
    GLAPI PFNGLGETTRANSFORMFEEDBACKIVPROC glad_glGetTransformFeedbackiv;
    GLAPI PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_glGetTransformFeedbacki_v;
    GLAPI PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_glGetTransformFeedbacki64_v;
    GLAPI PFNGLCREATEBUFFERSPROC glad_glCreateBuffers;
    GLAPI PFNGLNAMEDBUFFERSTORAGEPROC glad_glNamedBufferStorage;
    GLAPI PFNGLNAMEDBUFFERDATAPROC glad_glNamedBufferData;
    GLAPI PFNGLNAMEDBUFFERSUBDATAPROC glad_glNamedBufferSubData;
    GLAPI PFNGLCOPYNAMEDBUFFERSUBDATAPROC glad_glCopyNamedBufferSubData;
    GLAPI PFNGLCLEARNAMEDBUFFERDATAPROC glad_glClearNamedBufferData;
    GLAPI PFNGLCLEARNAMEDBUFFERSUBDATAPROC glad_glClearNamedBufferSubData;
    GLAPI PFNGLMAPNAMEDBUFFERPROC glad_glMapNamedBuffer;
    GLAPI PFNGLMAPNAMEDBUFFERRANGEPROC glad_glMapNamedBufferRange;
    GLAPI PFNGLUNMAPNAMEDBUFFERPROC glad_glUnmapNamedBuffer;
    GLAPI PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_glFlushMappedNamedBufferRange;
    GLAPI PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_glGetNamedBufferParameteriv;
    GLAPI PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_glGetNamedBufferParameteri64v;
    GLAPI PFNGLGETNAMEDBUFFERPOINTERVPROC glad_glGetNamedBufferPointerv;
    GLAPI PFNGLGETNAMEDBUFFERSUBDATAPROC glad_glGetNamedBufferSubData;
    GLAPI PFNGLCREATEFRAMEBUFFERSPROC glad_glCreateFramebuffers;
    GLAPI PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_glNamedFramebufferRenderbuffer;
    GLAPI PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_glNamedFramebufferParameteri;
    GLAPI PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_glNamedFramebufferTexture;
    GLAPI PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_glNamedFramebufferTextureLayer;
    GLAPI PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_glNamedFramebufferDrawBuffer;
    GLAPI PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_glNamedFramebufferDrawBuffers;
    GLAPI PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_glNamedFramebufferReadBuffer;
    GLAPI PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_glInvalidateNamedFramebufferData;
    GLAPI PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_glInvalidateNamedFramebufferSubData;
    GLAPI PFNGLCLEARNAMEDFRAMEBUFFERIVPROC glad_glClearNamedFramebufferiv;
    GLAPI PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC glad_glClearNamedFramebufferuiv;
    GLAPI PFNGLCLEARNAMEDFRAMEBUFFERFVPROC glad_glClearNamedFramebufferfv;
    GLAPI PFNGLCLEARNAMEDFRAMEBUFFERFIPROC glad_glClearNamedFramebufferfi;
    GLAPI PFNGLBLITNAMEDFRAMEBUFFERPROC glad_glBlitNamedFramebuffer;
    GLAPI PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC glad_glCheckNamedFramebufferStatus;
    GLAPI PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_glGetNamedFramebufferParameteriv;
    GLAPI PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetNamedFramebufferAttachmentParameteriv;
    GLAPI PFNGLCREATERENDERBUFFERSPROC glad_glCreateRenderbuffers;
    GLAPI PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_glNamedRenderbufferStorage;
    GLAPI PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glNamedRenderbufferStorageMultisample;
    GLAPI PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_glGetNamedRenderbufferParameteriv;
    GLAPI PFNGLCREATETEXTURESPROC glad_glCreateTextures;
    GLAPI PFNGLTEXTUREBUFFERPROC glad_glTextureBuffer;
    GLAPI PFNGLTEXTUREBUFFERRANGEPROC glad_glTextureBufferRange;
    GLAPI PFNGLTEXTURESTORAGE1DPROC glad_glTextureStorage1D;
    GLAPI PFNGLTEXTURESTORAGE2DPROC glad_glTextureStorage2D;
    GLAPI PFNGLTEXTURESTORAGE3DPROC glad_glTextureStorage3D;
    GLAPI PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC glad_glTextureStorage2DMultisample;
    GLAPI PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC glad_glTextureStorage3DMultisample;
    GLAPI PFNGLTEXTURESUBIMAGE1DPROC glad_glTextureSubImage1D;
    GLAPI PFNGLTEXTURESUBIMAGE2DPROC glad_glTextureSubImage2D;
    GLAPI PFNGLTEXTURESUBIMAGE3DPROC glad_glTextureSubImage3D;
    GLAPI PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC glad_glCompressedTextureSubImage1D;
    GLAPI PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC glad_glCompressedTextureSubImage2D;
    GLAPI PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC glad_glCompressedTextureSubImage3D;
    GLAPI PFNGLCOPYTEXTURESUBIMAGE1DPROC glad_glCopyTextureSubImage1D;
    GLAPI PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_glCopyTextureSubImage2D;
    GLAPI PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_glCopyTextureSubImage3D;
    GLAPI PFNGLTEXTUREPARAMETERFPROC glad_glTextureParameterf;
    GLAPI PFNGLTEXTUREPARAMETERFVPROC glad_glTextureParameterfv;
    GLAPI PFNGLTEXTUREPARAMETERIPROC glad_glTextureParameteri;
    GLAPI PFNGLTEXTUREPARAMETERIIVPROC glad_glTextureParameterIiv;
    GLAPI PFNGLTEXTUREPARAMETERIUIVPROC glad_glTextureParameterIuiv;
    GLAPI PFNGLTEXTUREPARAMETERIVPROC glad_glTextureParameteriv;
    GLAPI PFNGLGENERATETEXTUREMIPMAPPROC glad_glGenerateTextureMipmap;
    GLAPI PFNGLBINDTEXTUREUNITPROC glad_glBindTextureUnit;
    GLAPI PFNGLGETTEXTUREIMAGEPROC glad_glGetTextureImage;
    GLAPI PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_glGetCompressedTextureImage;
    GLAPI PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_glGetTextureLevelParameterfv;
    GLAPI PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_glGetTextureLevelParameteriv;
    GLAPI PFNGLGETTEXTUREPARAMETERFVPROC glad_glGetTextureParameterfv;
    GLAPI PFNGLGETTEXTUREPARAMETERIIVPROC glad_glGetTextureParameterIiv;
    GLAPI PFNGLGETTEXTUREPARAMETERIUIVPROC glad_glGetTextureParameterIuiv;
    GLAPI PFNGLGETTEXTUREPARAMETERIVPROC glad_glGetTextureParameteriv;
    GLAPI PFNGLCREATEVERTEXARRAYSPROC glad_glCreateVertexArrays;
    GLAPI PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_glDisableVertexArrayAttrib;
    GLAPI PFNGLENABLEVERTEXARRAYATTRIBPROC glad_glEnableVertexArrayAttrib;
    GLAPI PFNGLVERTEXARRAYELEMENTBUFFERPROC glad_glVertexArrayElementBuffer;
    GLAPI PFNGLVERTEXARRAYVERTEXBUFFERPROC glad_glVertexArrayVertexBuffer;
    GLAPI PFNGLVERTEXARRAYVERTEXBUFFERSPROC glad_glVertexArrayVertexBuffers;
    GLAPI PFNGLVERTEXARRAYATTRIBBINDINGPROC glad_glVertexArrayAttribBinding;
    GLAPI PFNGLVERTEXARRAYATTRIBFORMATPROC glad_glVertexArrayAttribFormat;
    GLAPI PFNGLVERTEXARRAYATTRIBIFORMATPROC glad_glVertexArrayAttribIFormat;
    GLAPI PFNGLVERTEXARRAYATTRIBLFORMATPROC glad_glVertexArrayAttribLFormat;
    GLAPI PFNGLVERTEXARRAYBINDINGDIVISORPROC glad_glVertexArrayBindingDivisor;
    GLAPI PFNGLGETVERTEXARRAYIVPROC glad_glGetVertexArrayiv;
    GLAPI PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_glGetVertexArrayIndexediv;
    GLAPI PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_glGetVertexArrayIndexed64iv;
    GLAPI PFNGLCREATESAMPLERSPROC glad_glCreateSamplers;
    GLAPI PFNGLCREATEPROGRAMPIPELINESPROC glad_glCreateProgramPipelines;
    GLAPI PFNGLCREATEQUERIESPROC glad_glCreateQueries;
    GLAPI PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_glGetQueryBufferObjecti64v;
    GLAPI PFNGLGETQUERYBUFFEROBJECTIVPROC glad_glGetQueryBufferObjectiv;
    GLAPI PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_glGetQueryBufferObjectui64v;
    GLAPI PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_glGetQueryBufferObjectuiv;
    GLAPI PFNGLMEMORYBARRIERBYREGIONPROC glad_glMemoryBarrierByRegion;
    GLAPI PFNGLGETTEXTURESUBIMAGEPROC glad_glGetTextureSubImage;
    GLAPI PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_glGetCompressedTextureSubImage;
    GLAPI PFNGLGETGRAPHICSRESETSTATUSPROC glad_glGetGraphicsResetStatus;
    GLAPI PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_glGetnCompressedTexImage;
    GLAPI PFNGLGETNTEXIMAGEPROC glad_glGetnTexImage;
    GLAPI PFNGLGETNUNIFORMDVPROC glad_glGetnUniformdv;
    GLAPI PFNGLGETNUNIFORMFVPROC glad_glGetnUniformfv;
    GLAPI PFNGLGETNUNIFORMIVPROC glad_glGetnUniformiv;
    GLAPI PFNGLGETNUNIFORMUIVPROC glad_glGetnUniformuiv;
    GLAPI PFNGLREADNPIXELSPROC glad_glReadnPixels;
    GLAPI PFNGLGETNMAPDVPROC glad_glGetnMapdv;
    GLAPI PFNGLGETNMAPFVPROC glad_glGetnMapfv;
    GLAPI PFNGLGETNMAPIVPROC glad_glGetnMapiv;
    GLAPI PFNGLGETNPIXELMAPFVPROC glad_glGetnPixelMapfv;
    GLAPI PFNGLGETNPIXELMAPUIVPROC glad_glGetnPixelMapuiv;
    GLAPI PFNGLGETNPIXELMAPUSVPROC glad_glGetnPixelMapusv;
    GLAPI PFNGLGETNPOLYGONSTIPPLEPROC glad_glGetnPolygonStipple;
    GLAPI PFNGLGETNCOLORTABLEPROC glad_glGetnColorTable;
    GLAPI PFNGLGETNCONVOLUTIONFILTERPROC glad_glGetnConvolutionFilter;
    GLAPI PFNGLGETNSEPARABLEFILTERPROC glad_glGetnSeparableFilter;
    GLAPI PFNGLGETNHISTOGRAMPROC glad_glGetnHistogram;
    GLAPI PFNGLGETNMINMAXPROC glad_glGetnMinmax;
    GLAPI PFNGLTEXTUREBARRIERPROC glad_glTextureBarrier;

#ifdef __GL_FUNCTION_MACROS__
#define glClipControl glad_glClipControl
#define glCreateTransformFeedbacks glad_glCreateTransformFeedbacks
#define glTransformFeedbackBufferBase glad_glTransformFeedbackBufferBase
#define glTransformFeedbackBufferRange glad_glTransformFeedbackBufferRange
#define glGetTransformFeedbackiv glad_glGetTransformFeedbackiv
#define glGetTransformFeedbacki_v glad_glGetTransformFeedbacki_v
#define glGetTransformFeedbacki64_v glad_glGetTransformFeedbacki64_v
#define glCreateBuffers glad_glCreateBuffers
#define glNamedBufferStorage glad_glNamedBufferStorage
#define glNamedBufferData glad_glNamedBufferData
#define glNamedBufferSubData glad_glNamedBufferSubData
#define glCopyNamedBufferSubData glad_glCopyNamedBufferSubData
#define glClearNamedBufferData glad_glClearNamedBufferData
#define glClearNamedBufferSubData glad_glClearNamedBufferSubData
#define glMapNamedBuffer glad_glMapNamedBuffer
#define glMapNamedBufferRange glad_glMapNamedBufferRange
#define glUnmapNamedBuffer glad_glUnmapNamedBuffer
#define glFlushMappedNamedBufferRange glad_glFlushMappedNamedBufferRange
#define glGetNamedBufferParameteriv glad_glGetNamedBufferParameteriv
#define glGetNamedBufferParameteri64v glad_glGetNamedBufferParameteri64v
#define glGetNamedBufferPointerv glad_glGetNamedBufferPointerv
#define glGetNamedBufferSubData glad_glGetNamedBufferSubData
#define glCreateFramebuffers glad_glCreateFramebuffers
#define glNamedFramebufferRenderbuffer glad_glNamedFramebufferRenderbuffer
#define glNamedFramebufferParameteri glad_glNamedFramebufferParameteri
#define glNamedFramebufferTexture glad_glNamedFramebufferTexture
#define glNamedFramebufferTextureLayer glad_glNamedFramebufferTextureLayer
#define glNamedFramebufferDrawBuffer glad_glNamedFramebufferDrawBuffer
#define glNamedFramebufferDrawBuffers glad_glNamedFramebufferDrawBuffers
#define glNamedFramebufferReadBuffer glad_glNamedFramebufferReadBuffer
#define glInvalidateNamedFramebufferData glad_glInvalidateNamedFramebufferData
#define glInvalidateNamedFramebufferSubData glad_glInvalidateNamedFramebufferSubData
#define glClearNamedFramebufferiv glad_glClearNamedFramebufferiv
#define glClearNamedFramebufferuiv glad_glClearNamedFramebufferuiv
#define glClearNamedFramebufferfv glad_glClearNamedFramebufferfv
#define glClearNamedFramebufferfi glad_glClearNamedFramebufferfi
#define glBlitNamedFramebuffer glad_glBlitNamedFramebuffer
#define glCheckNamedFramebufferStatus glad_glCheckNamedFramebufferStatus
#define glGetNamedFramebufferParameteriv glad_glGetNamedFramebufferParameteriv
#define glGetNamedFramebufferAttachmentParameteriv glad_glGetNamedFramebufferAttachmentParameteriv
#define glCreateRenderbuffers glad_glCreateRenderbuffers
#define glNamedRenderbufferStorage glad_glNamedRenderbufferStorage
#define glNamedRenderbufferStorageMultisample glad_glNamedRenderbufferStorageMultisample
#define glGetNamedRenderbufferParameteriv glad_glGetNamedRenderbufferParameteriv
#define glCreateTextures glad_glCreateTextures
#define glTextureBuffer glad_glTextureBuffer
#define glTextureBufferRange glad_glTextureBufferRange
#define glTextureStorage1D glad_glTextureStorage1D
#define glTextureStorage2D glad_glTextureStorage2D
#define glTextureStorage3D glad_glTextureStorage3D
#define glTextureStorage2DMultisample glad_glTextureStorage2DMultisample
#define glTextureStorage3DMultisample glad_glTextureStorage3DMultisample
#define glTextureSubImage1D glad_glTextureSubImage1D
#define glTextureSubImage2D glad_glTextureSubImage2D
#define glTextureSubImage3D glad_glTextureSubImage3D
#define glCompressedTextureSubImage1D glad_glCompressedTextureSubImage1D
#define glCompressedTextureSubImage2D glad_glCompressedTextureSubImage2D
#define glCompressedTextureSubImage3D glad_glCompressedTextureSubImage3D
#define glCopyTextureSubImage1D glad_glCopyTextureSubImage1D
#define glCopyTextureSubImage2D glad_glCopyTextureSubImage2D
#define glCopyTextureSubImage3D glad_glCopyTextureSubImage3D
#define glTextureParameterf glad_glTextureParameterf
#define glTextureParameterfv glad_glTextureParameterfv
#define glTextureParameteri glad_glTextureParameteri
#define glTextureParameterIiv glad_glTextureParameterIiv
#define glTextureParameterIuiv glad_glTextureParameterIuiv
#define glTextureParameteriv glad_glTextureParameteriv
#define glGenerateTextureMipmap glad_glGenerateTextureMipmap
#define glBindTextureUnit glad_glBindTextureUnit
#define glGetTextureImage glad_glGetTextureImage
#define glGetCompressedTextureImage glad_glGetCompressedTextureImage
#define glGetTextureLevelParameterfv glad_glGetTextureLevelParameterfv
#define glGetTextureLevelParameteriv glad_glGetTextureLevelParameteriv
#define glGetTextureParameterfv glad_glGetTextureParameterfv
#define glGetTextureParameterIiv glad_glGetTextureParameterIiv
#define glGetTextureParameterIuiv glad_glGetTextureParameterIuiv
#define glGetTextureParameteriv glad_glGetTextureParameteriv
#define glCreateVertexArrays glad_glCreateVertexArrays
#define glDisableVertexArrayAttrib glad_glDisableVertexArrayAttrib
#define glEnableVertexArrayAttrib glad_glEnableVertexArrayAttrib
#define glVertexArrayElementBuffer glad_glVertexArrayElementBuffer
#define glVertexArrayVertexBuffer glad_glVertexArrayVertexBuffer
#define glVertexArrayVertexBuffers glad_glVertexArrayVertexBuffers
#define glVertexArrayAttribBinding glad_glVertexArrayAttribBinding
#define glVertexArrayAttribFormat glad_glVertexArrayAttribFormat
#define glVertexArrayAttribIFormat glad_glVertexArrayAttribIFormat
#define glVertexArrayAttribLFormat glad_glVertexArrayAttribLFormat
#define glVertexArrayBindingDivisor glad_glVertexArrayBindingDivisor
#define glGetVertexArrayiv glad_glGetVertexArrayiv
#define glGetVertexArrayIndexediv glad_glGetVertexArrayIndexediv
#define glGetVertexArrayIndexed64iv glad_glGetVertexArrayIndexed64iv
#define glCreateSamplers glad_glCreateSamplers
#define glCreateProgramPipelines glad_glCreateProgramPipelines
#define glCreateQueries glad_glCreateQueries
#define glGetQueryBufferObjecti64v glad_glGetQueryBufferObjecti64v
#define glGetQueryBufferObjectiv glad_glGetQueryBufferObjectiv
#define glGetQueryBufferObjectui64v glad_glGetQueryBufferObjectui64v
#define glGetQueryBufferObjectuiv glad_glGetQueryBufferObjectuiv
#define glMemoryBarrierByRegion glad_glMemoryBarrierByRegion
#define glGetTextureSubImage glad_glGetTextureSubImage
#define glGetCompressedTextureSubImage glad_glGetCompressedTextureSubImage
#define glGetGraphicsResetStatus glad_glGetGraphicsResetStatus
#define glGetnCompressedTexImage glad_glGetnCompressedTexImage
#define glGetnTexImage glad_glGetnTexImage
#define glGetnUniformdv glad_glGetnUniformdv
#define glGetnUniformfv glad_glGetnUniformfv
#define glGetnUniformiv glad_glGetnUniformiv
#define glGetnUniformuiv glad_glGetnUniformuiv
#define glReadnPixels glad_glReadnPixels
#define glGetnMapdv glad_glGetnMapdv
#define glGetnMapfv glad_glGetnMapfv
#define glGetnMapiv glad_glGetnMapiv
#define glGetnPixelMapfv glad_glGetnPixelMapfv
#define glGetnPixelMapuiv glad_glGetnPixelMapuiv
#define glGetnPixelMapusv glad_glGetnPixelMapusv
#define glGetnPolygonStipple glad_glGetnPolygonStipple
#define glGetnColorTable glad_glGetnColorTable
#define glGetnConvolutionFilter glad_glGetnConvolutionFilter
#define glGetnSeparableFilter glad_glGetnSeparableFilter
#define glGetnHistogram glad_glGetnHistogram
#define glGetnMinmax glad_glGetnMinmax
#define glTextureBarrier glad_glTextureBarrier
#else
    GLAPI void glClipControl(GLenum origin, GLenum depth);
    GLAPI void glCreateTransformFeedbacks(GLsizei n, GLuint *ids);
    GLAPI void glTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer);
    GLAPI void glTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
    GLAPI void glGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint *param);
    GLAPI void glGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint *param);
    GLAPI void glGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
    GLAPI void glCreateBuffers(GLsizei n, GLuint *buffers);
    GLAPI void glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
    GLAPI void glNamedBufferData(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
    GLAPI void glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
    GLAPI void glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
    GLAPI void glClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
    GLAPI void glClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
    GLAPI void* glMapNamedBuffer(GLuint buffer, GLenum access);
    GLAPI void* glMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
    GLAPI GLboolean glUnmapNamedBuffer(GLuint buffer);
    GLAPI void glFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length);
    GLAPI void glGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint *params);
    GLAPI void glGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 *params);
    GLAPI void glGetNamedBufferPointerv(GLuint buffer, GLenum pname, void **params);
    GLAPI void glGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
    GLAPI void glCreateFramebuffers(GLsizei n, GLuint *framebuffers);
    GLAPI void glNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
    GLAPI void glNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param);
    GLAPI void glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
    GLAPI void glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
    GLAPI void glNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf);
    GLAPI void glNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum *bufs);
    GLAPI void glNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src);
    GLAPI void glInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
    GLAPI void glInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
    GLAPI void glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
    GLAPI void glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
    GLAPI void glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
    GLAPI void glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
    GLAPI void glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
    GLAPI GLenum glCheckNamedFramebufferStatus(GLuint framebuffer, GLenum target);
    GLAPI void glGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint *param);
    GLAPI void glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
    GLAPI void glCreateRenderbuffers(GLsizei n, GLuint *renderbuffers);
    GLAPI void glNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
    GLAPI void glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
    GLAPI void glGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint *params);
    GLAPI void glCreateTextures(GLenum target, GLsizei n, GLuint *textures);
    GLAPI void glTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer);
    GLAPI void glTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
    GLAPI void glTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
    GLAPI void glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
    GLAPI void glTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
    GLAPI void glTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
    GLAPI void glTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
    GLAPI void glTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
    GLAPI void glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
    GLAPI void glTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
    GLAPI void glCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
    GLAPI void glCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
    GLAPI void glCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
    GLAPI void glCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
    GLAPI void glCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    GLAPI void glCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
    GLAPI void glTextureParameterf(GLuint texture, GLenum pname, GLfloat param);
    GLAPI void glTextureParameterfv(GLuint texture, GLenum pname, const GLfloat *param);
    GLAPI void glTextureParameteri(GLuint texture, GLenum pname, GLint param);
    GLAPI void glTextureParameterIiv(GLuint texture, GLenum pname, const GLint *params);
    GLAPI void glTextureParameterIuiv(GLuint texture, GLenum pname, const GLuint *params);
    GLAPI void glTextureParameteriv(GLuint texture, GLenum pname, const GLint *param);
    GLAPI void glGenerateTextureMipmap(GLuint texture);
    GLAPI void glBindTextureUnit(GLuint unit, GLuint texture);
    GLAPI void glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    GLAPI void glGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
    GLAPI void glGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat *params);
    GLAPI void glGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint *params);
    GLAPI void glGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat *params);
    GLAPI void glGetTextureParameterIiv(GLuint texture, GLenum pname, GLint *params);
    GLAPI void glGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint *params);
    GLAPI void glGetTextureParameteriv(GLuint texture, GLenum pname, GLint *params);
    GLAPI void glCreateVertexArrays(GLsizei n, GLuint *arrays);
    GLAPI void glDisableVertexArrayAttrib(GLuint vaobj, GLuint index);
    GLAPI void glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);
    GLAPI void glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);
    GLAPI void glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
    GLAPI void glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
    GLAPI void glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
    GLAPI void glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
    GLAPI void glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    GLAPI void glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
    GLAPI void glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor);
    GLAPI void glGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint *param);
    GLAPI void glGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
    GLAPI void glGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
    GLAPI void glCreateSamplers(GLsizei n, GLuint *samplers);
    GLAPI void glCreateProgramPipelines(GLsizei n, GLuint *pipelines);
    GLAPI void glCreateQueries(GLenum target, GLsizei n, GLuint *ids);
    GLAPI void glGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    GLAPI void glGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    GLAPI void glGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    GLAPI void glGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
    GLAPI void glMemoryBarrierByRegion(GLbitfield barriers);
    GLAPI void glGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    GLAPI void glGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
    GLAPI GLenum glGetGraphicsResetStatus(void);
    GLAPI void glGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
    GLAPI void glGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
    GLAPI void glGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
    GLAPI void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
    GLAPI void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint *params);
    GLAPI void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
    GLAPI void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
    GLAPI void glGetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
    GLAPI void glGetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
    GLAPI void glGetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
    GLAPI void glGetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat *values);
    GLAPI void glGetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint *values);
    GLAPI void glGetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort *values);
    GLAPI void glGetnPolygonStipple(GLsizei bufSize, GLubyte *pattern);
    GLAPI void glGetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
    GLAPI void glGetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
    GLAPI void glGetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
    GLAPI void glGetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    GLAPI void glGetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
    GLAPI void glTextureBarrier(void);
#endif
#endif
#ifndef GL_VERSION_4_6
#define GL_VERSION_4_6 1
    GLAPI int GLAD_GL_VERSION_4_6;

    typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC)(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
    typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)(GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)(GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC)(GLfloat factor, GLfloat units, GLfloat clamp);

    GLAPI PFNGLSPECIALIZESHADERPROC glad_glSpecializeShader;
    GLAPI PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_glMultiDrawArraysIndirectCount;
    GLAPI PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_glMultiDrawElementsIndirectCount;
    GLAPI PFNGLPOLYGONOFFSETCLAMPPROC glad_glPolygonOffsetClamp;

#ifdef __GL_FUNCTION_MACROS__
#define glSpecializeShader glad_glSpecializeShader
#define glMultiDrawArraysIndirectCount glad_glMultiDrawArraysIndirectCount
#define glMultiDrawElementsIndirectCount glad_glMultiDrawElementsIndirectCount
#define glPolygonOffsetClamp glad_glPolygonOffsetClamp
#else
    GLAPI void glSpecializeShader(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
    GLAPI void glMultiDrawArraysIndirectCount(GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    GLAPI void glMultiDrawElementsIndirectCount(GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
    GLAPI void glPolygonOffsetClamp(GLfloat factor, GLfloat units, GLfloat clamp);
#endif
#endif

#ifdef __cplusplus
}
#endif

#endif
